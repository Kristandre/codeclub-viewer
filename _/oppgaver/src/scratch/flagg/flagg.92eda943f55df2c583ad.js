webpackJsonp([139,236],{

/***/ 1072:
/*!*************************************************************************************************************************************************************************************!*\
  !*** ./~/combine-loader/lib?{"frontmatter":["json","front-matter?onlyAttributes"],"content":["html","markdown-it","front-matter?onlyBody"]}!../oppgaver/src/scratch/flagg/flagg.md ***!
  \*************************************************************************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = {"frontmatter": __webpack_require__(/*! -!json!front-matter?onlyAttributes!../oppgaver/src/scratch/flagg/flagg.md */ 1073),"content": __webpack_require__(/*! -!html!markdown-it!front-matter?onlyBody!../oppgaver/src/scratch/flagg/flagg.md */ 1074)}

/***/ },

/***/ 1074:
/*!**********************************************************************************************************************!*\
  !*** ./~/html-loader!./~/markdown-it-loader!./~/front-matter-loader?onlyBody!../oppgaver/src/scratch/flagg/flagg.md ***!
  \**********************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = "<section class=\"intro\" id=\"introduksjon\">\n<h1 class=\"intro\" id=\"introduksjon\">Introduksjon</h1>\n<p>I denne oppgaven vil vi se litt nærmere på hvordan vi kan lage spennende mønstre\nog animasjoner ved hjelp av litt matematikk. Spesielt skal vi tegne et flagg som\nser ut som om det vaier i vinden.</p>\n<figure><img src=\"" + __webpack_require__(/*! ./flagg.png */ 1075) + "\" alt=\"\" /></figure>\n</section>\n<section class=\"activity\" id=\"steg-1-ga-i-sirkel\">\n<h1 class=\"activity\" id=\"steg-1-ga-i-sirkel\">Steg 1: Gå i sirkel</h1>\n<p>Vi har tidligere sett flere måter vi kan få figurer til å gå i sirkel på. For\neksempel flyttet vi i <a href=\"../soloball/soloball.html\">Soloball</a> figuren vekk fra\nsentrum og brukte <code class=\"b\">pek mot [musepeker v]</code> for å flytte figuren i sirkel.</p>\n<p>I denne oppgaven skal vi bruke to funksjoner, <em>sinus</em> og <em>cosinus</em>, for å ta\nlitt mer kontroll over hvordan sirkelbevegelsen skjer. Du har kanskje ikke hørt\nom <em>sinus</em> og <em>cosinus</em>? Disse er tall som forteller hvor lange sidene i en\nrettvinklet trekant er i forhold til hverandre. I figuren nedenfor forteller for\neksempel <em>cosinus</em>, <code>cos(vinkel)</code> oss hvor lang den vannrette streken er i\nforhold til den skrå streken.</p>\n<figure><img src=\"" + __webpack_require__(/*! ../lunar_lander/sinus_cosinus.png */ 1076) + "\" alt=\"\" /></figure>\n<p>La oss se hvordan vi kan bruke dette til å tegne sirkler!</p>\n<section class=\"check\" id=\"sjekkliste\">\n<h2 class=\"check\" id=\"sjekkliste\">Sjekkliste</h2>\n<ul>\n<li>\n<p>Start et nytt prosjekt.</p>\n</li>\n<li>\n<p>Skriv det følgende skriptet på kattefiguren:</p>\n<pre><code class=\"language-blocks\">når grønt flagg klikkes\nbegrens rotasjon [ikke roter v]\nfor alltid\n    sett x <span class=\"hljs-built_in\">til</span> ((<span class=\"hljs-number\">100</span>) * ([<span class=\"hljs-built_in\">cos</span> v] av (retning)))\n    sett y <span class=\"hljs-built_in\">til</span> ((<span class=\"hljs-number\">100</span>) * ([<span class=\"hljs-built_in\">sin</span> v] av (retning)))\n    vend venstre (<span class=\"hljs-number\">5</span>) grader\nslutt\n</code></pre>\n</li>\n</ul>\n</section>\n<section class=\"flag\" id=\"test-prosjektet\">\n<h2 class=\"flag\" id=\"test-prosjektet\">Test prosjektet</h2>\n<figure><strong>Klikk på det grønne flagget.</strong></figure>\n<ul>\n<li>\n<p>Hva skjer? Skjønner du hvorfor kattefiguren flytter seg rundt i en sirkel?</p>\n<p>Tallet <code>100</code> forteller hvor stor sirkelen skal være (det er lengden av den\nskrå streken i figuren over). Prøv å endre på tallet (begge steder) for å se\nhva som skjer.</p>\n</li>\n<li>\n<figure>Hva skjer om du bruker forskjellige tall de to stedene i stedet for <code>100</code>?</figure>\n</li>\n<li>\n<p>Hvordan forandrer bevegelsen til katten seg om du forandrer tallet <code>5</code> i <code class=\"b\">vend venstre (5) grader</code>? Prøv gjerne med negative tall også!</p>\n</li>\n</ul>\n</section>\n<section class=\"tip\" id=\"retning-pa-sirkelbevegelsen\">\n<h2 class=\"tip\" id=\"retning-pa-sirkelbevegelsen\">Retning på sirkelbevegelsen</h2>\n<p>Du legger kanskje merke til at katten flytter seg i motsatt retning av hvordan\npilen i <code class=\"b\">vend venstre (5) grader</code> klossen peker? Dette er fordi Scratch\nmåler vinkler i motsatt retning av hva som er vanlig i matematikken (og som vi\nhar tegnet over).</p>\n</section>\n</section>\n<section class=\"activity\" id=\"steg-2-flytt-sirkelen\">\n<h1 class=\"activity\" id=\"steg-2-flytt-sirkelen\">Steg 2: Flytt sirkelen</h1>\n<p>Så langt har vi bare tegnet en sirkel midt på skjermen. La oss se om vi kan flytte den!</p>\n<section class=\"check\" id=\"sjekkliste-2\">\n<h2 class=\"check\" id=\"sjekkliste-2\">Sjekkliste</h2>\n<ul>\n<li>\n<p>Siden vi allerede flytter figuren langs en sirkel kan vi ikke bruke <code class=\"b\">gå til x: () y: ()</code>-klosser for å flytte hele sirkelen. I stedet vil vi bruke\nvariabler.  Lag to variabler som heter <code class=\"b\">(sentrumX)</code> og <code class=\"b\">(sentrumY)</code> og\nsom gjelder kun <em>for denne figuren</em>.</p>\n</li>\n<li>\n<p>Vi kan nå flytte sirkelen over ved å sette <code class=\"b\">(sentrumX)</code>- og\n<code class=\"b\">(sentrumY)</code>-variablene:</p>\n<pre><code class=\"language-blocks\">når grønt flagg klikkes\nbegrens rotasjon <span class=\"hljs-string\">[ikke roter v]</span>\nsett <span class=\"hljs-string\">[sentrumX v]</span> til <span class=\"hljs-string\">[-100]</span>\nsett <span class=\"hljs-string\">[sentrumY v]</span> til <span class=\"hljs-string\">[50]</span>\nfor alltid\n    sett x til ((sentrumX) + ((<span class=\"hljs-number\">100</span>) * (<span class=\"hljs-string\">[cos v]</span> av (retning)))\n    sett y til ((sentrumY) + ((<span class=\"hljs-number\">100</span>) * (<span class=\"hljs-string\">[sin v]</span> av (retning)))\n    vend venstre (<span class=\"hljs-number\">5</span>) grader\nslutt\n</code></pre>\n</li>\n</ul>\n</section>\n<section class=\"flag\" id=\"test-prosjektet-2\">\n<h2 class=\"flag\" id=\"test-prosjektet-2\">Test prosjektet</h2>\n<figure><strong>Klikk på det grønne flagget.</strong></figure>\n<ul>\n<li>Flytter sirkelen seg til det nye sentrumet?</li>\n</ul>\n</section>\n<section class=\"try\" id=\"prov-selv\">\n<h2 class=\"try\" id=\"prov-selv\">Prøv selv</h2>\n<ul>\n<li>\n<p>Legg til en ny variabel, <code class=\"b\">(radius)</code>, som også gjelder kun <em>for denne\nfiguren</em>. Kan du bruke denne til å styre hvor stor sirkelen er? Det vil si,\n<code class=\"b\">(radius)</code> skal fortelle lengden av den skrå streken i figuren i\nbegynnelsen av oppgaven.</p>\n<p>Du trenger en <code class=\"b\">sett [radius v] til []</code>-kloss i tillegg til å bruke\n<code class=\"b\">(radius)</code> to steder i koden din.</p>\n</li>\n</ul>\n</section>\n</section>\n<section class=\"activity\" id=\"steg-3-dansende-disker\">\n<h1 class=\"activity\" id=\"steg-3-dansende-disker\">Steg 3: Dansende disker</h1>\n<p>Nå skal vi prøve å få mange figurer til å gå i sirkel samtidig.</p>\n<section class=\"check\" id=\"sjekkliste-3\">\n<h2 class=\"check\" id=\"sjekkliste-3\">Sjekkliste</h2>\n<ul>\n<li>\n<p>Tegn en ny drakt på figuren din. Bruk vektorgrafikk til å tegne en rød fyllt\nsirkel (disk). Denne kan være ganske liten, for eksempel <code>20 x 20</code> piksler.</p>\n<figure><img src=\"" + __webpack_require__(/*! ./rod_disk.png */ 1077) + "\" alt=\"\" /></figure>\n</li>\n<li>\n<figure>Vi kan lage mange røde disker ved å klone denne ene disken. Del koden din i to\ndeler, og endre den på denne måten:</figure>\n<pre><code class=\"language-blocks\">når grønt flagg klikkes\n<span class=\"hljs-function\"><span class=\"hljs-title\">gjenta</span> <span class=\"hljs-params\">(<span class=\"hljs-number\">99</span>)</span> <span class=\"hljs-title\">ganger</span>\n    <span class=\"hljs-title\">sett</span> [<span class=\"hljs-title\">sentrumX</span> <span class=\"hljs-title\">v</span>] <span class=\"hljs-title\">til</span> <span class=\"hljs-params\">(tilfeldig tall fra (-<span class=\"hljs-number\">150</span>)</span> <span class=\"hljs-title\">til</span> <span class=\"hljs-params\">(<span class=\"hljs-number\">150</span>)</span>)\n    <span class=\"hljs-title\">sett</span> [<span class=\"hljs-title\">sentrumY</span> <span class=\"hljs-title\">v</span>] <span class=\"hljs-title\">til</span> <span class=\"hljs-params\">(tilfeldig tall fra (-<span class=\"hljs-number\">100</span>)</span> <span class=\"hljs-title\">til</span> <span class=\"hljs-params\">(<span class=\"hljs-number\">100</span>)</span>)\n    <span class=\"hljs-title\">sett</span> [<span class=\"hljs-title\">radius</span> <span class=\"hljs-title\">v</span>] <span class=\"hljs-title\">til</span> [50]\n    <span class=\"hljs-title\">lag</span> <span class=\"hljs-title\">klon</span> <span class=\"hljs-title\">av</span> [<span class=\"hljs-title\">meg</span> <span class=\"hljs-title\">v</span>]\n<span class=\"hljs-title\">slutt</span>\n\n<span class=\"hljs-title\">n</span>å<span class=\"hljs-title\">r</span> <span class=\"hljs-title\">jeg</span> <span class=\"hljs-title\">starter</span> <span class=\"hljs-title\">som</span> <span class=\"hljs-title\">klon</span>\n<span class=\"hljs-title\">for</span> <span class=\"hljs-title\">alltid</span>\n    <span class=\"hljs-title\">sett</span> <span class=\"hljs-title\">x</span> <span class=\"hljs-title\">til</span> <span class=\"hljs-params\">((sentrum<span class=\"hljs-variable\">X</span>)</span> + <span class=\"hljs-params\">((radius)</span> * <span class=\"hljs-params\">([cos v] av (retning)</span>))\n    <span class=\"hljs-title\">sett</span> <span class=\"hljs-title\">y</span> <span class=\"hljs-title\">til</span> <span class=\"hljs-params\">((sentrum<span class=\"hljs-variable\">Y</span>)</span> + <span class=\"hljs-params\">((radius)</span> * <span class=\"hljs-params\">([sin v] av (retning)</span>))\n    <span class=\"hljs-title\">vend</span> <span class=\"hljs-title\">venstre</span> <span class=\"hljs-params\">(<span class=\"hljs-number\">5</span>)</span> <span class=\"hljs-title\">grader</span>\n<span class=\"hljs-title\">slutt</span>\n</span></code></pre>\n</li>\n<li>\n<figure>Om du kjører programmet ditt nå vil du se 99 disker som danser (og 1 som står\ni ro) rundt på skjermen i et herlig kaos!</figure>\n<figure>Kaoset kommer faktisk av at Scratch bruker litt tid på å starte hver klon. Vi\nkan lage en mindre kaotisk dans på denne måten:</figure>\n<p>Bytt <code class=\"b\">når jeg starter som klon</code> med <code class=\"b\">når jeg mottar [dans v]</code>, og legg\ntil en <code class=\"b\">send melding [dans v]</code>-kloss etter <code class=\"b\">gjenta (99) ganger</code>-løkken.</p>\n<figure>Om du kjører programmet ditt igjen vil du se at alle diskene danser i takt.\nHva liker du best?</figure>\n</li>\n</ul>\n</section>\n</section>\n<section class=\"activity\" id=\"steg-4-flagrende-flagg\">\n<h1 class=\"activity\" id=\"steg-4-flagrende-flagg\">Steg 4: Flagrende flagg</h1>\n<figure>Vi skal nå se hvordan vi kan gjøre om denne kaotiske dansen til noe som ligner\npå et flagrende flagg.</figure>\n<section class=\"check\" id=\"sjekkliste-4\">\n<h2 class=\"check\" id=\"sjekkliste-4\">Sjekkliste</h2>\n<ul>\n<li>\n<figure>I forrige steg klonet vi disker til tilfeldige steder. Nå skal vi legge dem ut\nlitt mer organisert. Skriv om skriptet som legger ut diskene dine slik:</figure>\n<pre><code class=\"language-blocks\">når grønt flagg klikkes\nvis\nsett <span class=\"hljs-string\">[radius v]</span> til <span class=\"hljs-string\">[25]</span>\nsett <span class=\"hljs-string\">[sentrumX v]</span> til <span class=\"hljs-string\">[-160]</span>\ngjenta (<span class=\"hljs-number\">19</span>) ganger\n    sett <span class=\"hljs-string\">[sentrumY v]</span> til <span class=\"hljs-string\">[-100]</span>\n    gjenta (<span class=\"hljs-number\">14</span>) ganger\n        lag klon av <span class=\"hljs-string\">[meg v]</span>\n        endre <span class=\"hljs-string\">[sentrumY v]</span> med (<span class=\"hljs-number\">16</span>)\n    slutt\n    endre <span class=\"hljs-string\">[sentrumX v]</span> med (<span class=\"hljs-number\">16</span>)\nslutt\nsend melding <span class=\"hljs-string\">[flagre v]</span>\nskjul\n</code></pre>\n</li>\n<li>\n<figure>La så <code>flagre</code>-skriptet være det samme som du brukte til å danse tidligere:</figure>\n<pre><code class=\"language-blocks\">når jeg mottar [flagre v]\nfor alltid\n    sett x <span class=\"hljs-built_in\">til</span> ((sentrumX) + ((radius) * ([<span class=\"hljs-built_in\">cos</span> v] av (retning)))\n    sett y <span class=\"hljs-built_in\">til</span> ((sentrumY) + ((radius) * ([<span class=\"hljs-built_in\">sin</span> v] av (retning)))\n    vend venstre (<span class=\"hljs-number\">5</span>) grader\nslutt\n</code></pre>\n</li>\n<li>\n<p>Kjør programmet ditt. Du vil nå se et flagg bestående av mange røde disker som\nbeveger seg i sirkel. Men nå kommer det morsomme: Vi kan la de røde diskene\nbevege seg litt i utakt!</p>\n<p>Legg til klossen <code class=\"b\">vend høyre (1) grader</code> etter <code class=\"b\">lag klon av [meg v]</code>-klossen, og prøv programmet ditt igjen. Hva har skjedd?</p>\n</li>\n</ul>\n</section>\n</section>\n<section class=\"activity\" id=\"steg-5-det-norske-flagget\">\n<h1 class=\"activity\" id=\"steg-5-det-norske-flagget\">Steg 5: Det norske flagget</h1>\n<p>Nå skal vi se hvordan vi kan tegne flagget i forskjellige farger.</p>\n<section class=\"check\" id=\"sjekkliste-5\">\n<h2 class=\"check\" id=\"sjekkliste-5\">Sjekkliste</h2>\n<ul>\n<li>\n<p>Tegn først to nye drakter, begge kopier av den røde disken. Den første skal\nvære en hvit disk mens den andre skal være en blå disk. Gi de tre diskfigurene\ndine navnene <code>r</code>, <code>h</code> og <code>b</code> slik at navnet er første bokstaven i fargen på\ndisken: <code>r</code>ød, <code>h</code>vit og <code>b</code>lå.</p>\n<figure><img src=\"" + __webpack_require__(/*! ./tre_disker.png */ 1078) + "\" alt=\"\" /></figure>\n</li>\n<li>\n<p>Vi skal nå bruke en ny variabel <code class=\"b\">(flagg)</code> som beskriver fargene i\nflagget. Lag variabelen <em>for alle figurer</em> og legg deretter til koden:</p>\n<pre><code class=\"language-blocks\">når grønt flagg klikkes\nsett <span class=\"hljs-string\">[flagg v]</span> til <span class=\"hljs-string\">[rrrrrhbbhrrrrr]</span>\n</code></pre>\n<p>Bokstavene <code>rrrrrhbbhrrrrr</code> beskriver at vi først vil ha 5 røde disker,\nderetter 1 hvit, 2 blå, 1 hvit og 5 røde disker.</p>\n</li>\n<li>\n<p>For å kunne bruke den nye <code class=\"b\">(flagg)</code>-variabelen må også hver disk vite\nhvilket nummer den har. Lag en ny variabel <code class=\"b\">(nummer)</code> som gjelder kun <em>for\ndenne figuren</em>.</p>\n</li>\n<li>\n<p>Legg til <code class=\"b\">sett [nummer v] til [1]</code> rett under <code class=\"b\">vis</code> og <code class=\"b\">endre [nummer v] med (1)</code> rett under <code class=\"b\">lag klon av [meg v]</code>-klossen.</p>\n</li>\n<li>\n<p>Til slutt skal vi endre drakt på diskene. Legg til</p>\n<pre><code class=\"language-blocks\">bytt drakt til <span class=\"hljs-list\">(<span class=\"hljs-keyword\">bokstav</span> <span class=\"hljs-list\">(<span class=\"hljs-keyword\">nummer</span>)</span> i <span class=\"hljs-list\">(<span class=\"hljs-keyword\">flagg</span>)</span>)</span>\n</code></pre>\n<p>øverst i <code class=\"blockcontrol\">for alltid</code>-løkken i <code>flagre</code>-skriptet.</p>\n</li>\n<li>\n<p>Kjør programmet ditt. Den venstre delen av flagget ditt skal nå ha fått\nfargene til det norske flagget. For å fargelegge hele flagget må vi gi mange\nflere bokstaver til <code class=\"b\">(flagg)</code>-variabelen. Hele det norske flagget vil ha\nbokstavene</p>\n<pre><code><span class=\"hljs-title\">rrrrrhbbhrrrrrrrrrrhbbhrrrrrrrrrrhbbhrrrrrrrrrrhbbhrrrrrrrrrrhbbhrrrrr</span>\nhhhhhhbbhhhhhhbbbbbbbbbbbbbbbbbbbbbbbbbbbbhhhhhhbbhhhhhhrrrrrhbbhrrrrr\nrrrrrhbbhrrrrrrrrrrhbbhrrrrrrrrrrhbbhrrrrrrrrrrhbbhrrrrrrrrrrhbbhrrrrr\nrrrrrhbbhrrrrrrrrrrhbbhrrrrrrrrrrhbbhrrrrrrrrrrhbbhrrrrr\n</code></pre>\n</li>\n<li>\n<p>En enklere måte å tegne flagg på er å si at vi vil at mønsteret skal gjenta\nseg selv. Da trenger vi ikke skrive en bokstav for hver disk. Til dette kan vi\nbruke <code class=\"b\">() mod ()</code>-klossen.</p>\n<p>Bytt <code class=\"b\">(bokstav (nummer) i (flagg))</code> med <code class=\"b\">(bokstav ((nummer) mod (lengden av (flagg))) i (flagg))</code> i <code class=\"b\">bytt drakt til [ v]</code>-klossen. Om du prøver\nprogrammet igjen vil du se at flaggmønsteret gjentas (sett for eksempel\n<code class=\"b\">(flagg)</code> til <code>rhb</code> for å se dette).</p>\n</li>\n</ul>\n</section>\n<section class=\"try\" id=\"prov-selv-2\">\n<h2 class=\"try\" id=\"prov-selv-2\">Prøv selv</h2>\n<ul>\n<li>\n<figure>Tegn egne flagg. Om du trenger flere farger er det bare å lage flere\ndrakter. Pass på at hver drakt har en bokstav eller tall som navn.</figure>\n</li>\n<li>\n<p>Du kan også leke litt med de forskjellige tallene for en litt annerledes\nanimasjon. Prøv for eksempel med <code class=\"b\">vend høyre (25) grader</code> i klossen etter\n<code class=\"b\">lag klon av [meg v]</code>.</p>\n</li>\n<li>\n<p>Du kan endre utseendet på flagget underveis. For eksempel om du bruker en <code class=\"b\">når [ v] trykkes</code>-kloss kan du endre verdien av <code class=\"b\">(flagg)</code> basert på hvilke\ntaster som trykkes. Fargene i flagget vil da også oppdatere seg.</p>\n</li>\n</ul>\n</section>\n</section>\n";

/***/ },

/***/ 1075:
/*!***********************************************!*\
  !*** ../oppgaver/src/scratch/flagg/flagg.png ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "_/oppgaver/src/scratch/flagg/flagg.032705.png";

/***/ },

/***/ 1076:
/*!**************************************************************!*\
  !*** ../oppgaver/src/scratch/lunar_lander/sinus_cosinus.png ***!
  \**************************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "_/oppgaver/src/scratch/lunar_lander/sinus_cosinus.f1cb1b.png";

/***/ },

/***/ 1077:
/*!**************************************************!*\
  !*** ../oppgaver/src/scratch/flagg/rod_disk.png ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "_/oppgaver/src/scratch/flagg/rod_disk.a0ad6c.png";

/***/ },

/***/ 1078:
/*!****************************************************!*\
  !*** ../oppgaver/src/scratch/flagg/tre_disker.png ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "_/oppgaver/src/scratch/flagg/tre_disker.c6a390.png";

/***/ }

});
//# sourceMappingURL=flagg.92eda943f55df2c583ad.js.map