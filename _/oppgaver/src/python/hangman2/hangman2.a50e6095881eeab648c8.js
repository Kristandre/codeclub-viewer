webpackJsonp([103,236],{

/***/ 863:
/*!******************************************************************************************************************************************************************************************!*\
  !*** ./~/combine-loader/lib?{"frontmatter":["json","front-matter?onlyAttributes"],"content":["html","markdown-it","front-matter?onlyBody"]}!../oppgaver/src/python/hangman2/hangman2.md ***!
  \******************************************************************************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = {"frontmatter": __webpack_require__(/*! -!json!front-matter?onlyAttributes!../oppgaver/src/python/hangman2/hangman2.md */ 864),"content": __webpack_require__(/*! -!html!markdown-it!front-matter?onlyBody!../oppgaver/src/python/hangman2/hangman2.md */ 865)}

/***/ },

/***/ 865:
/*!***************************************************************************************************************************!*\
  !*** ./~/html-loader!./~/markdown-it-loader!./~/front-matter-loader?onlyBody!../oppgaver/src/python/hangman2/hangman2.md ***!
  \***************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = "<section class=\"intro\" id=\"introduksjon\">\n<h1 class=\"intro\" id=\"introduksjon\">Introduksjon</h1>\n<p>I denne oppgaven skal vi lage vårt eget hangman-spill.  Vi har laget litt\nferdigskrevet kode for å hjelpe deg på vei. Den kan du <a href=\"./hangman.py\">laste ned\nher</a>. Lagre den der du pleier å lagre Python-koden din.</p>\n<figure>Det kan se ut som mye kode, men det bare den øverste delen du skal endre på. Et\nlite stykke ned vil det være en overskrift som ser slik ut:</figure>\n<pre><code class=\"language-python\"><span class=\"hljs-comment\">###############################################################################</span>\n<span class=\"hljs-comment\"># Library code</span>\n<span class=\"hljs-comment\">###############################################################################</span>\n</code></pre>\n<figure>All koden under denne overskriften kan du bare overse. Dette er koden som\nhjelper deg med å tegne figurer og hente input fra brukeren.</figure>\n<p>I koden over overskriften har vi laget noen variabler:</p>\n<ul>\n<li>\n<p><code>TRIES</code> som angir hvor mange forsøk brukeren har. Ettersom det bare er\ntegnet figurer for 7 feil, så er det lurt å la denne være slik den er.</p>\n</li>\n<li>\n<p><code>WORDS</code> er en liste over ord som kan gjettes, men ingen av disse ordene kan\ninneholde æ, ø eller å.</p>\n</li>\n<li>\n<p><code>state</code> er en ordbok som inneholder spillets tilstand.</p>\n</li>\n</ul>\n<p>Vi har begynt å lage fire funksjoner for deg. Disse skal du gi innhold i steg 1 til 4.</p>\n</section>\n<section class=\"activity\" id=\"steg-0-test-at-alt-fungerer\">\n<h1 class=\"activity\" id=\"steg-0-test-at-alt-fungerer\">Steg 0: Test at alt fungerer</h1>\n<p>Ved å kjøre kommandoen</p>\n<pre><code class=\"language-sh\">pgzrun hangman.py\n</code></pre>\n<p>skal du få opp et vindu som ser slik ut:</p>\n<figure><img src=\"" + __webpack_require__(/*! ./hangman_blank_screen.png */ 866) + "\" alt=\"\" /></figure>\n</section>\n<section class=\"tip\" id=\"\">\n<h1 class=\"tip\" id=\"\"></h1>\n<p>Dersom du ikke får opp et vindu som beskrevet over, pass på at du har\ninstallert Python på riktig måte, lastet ned\n<a href=\"./hangman.py\">hangman.py</a> og er i samme mappe som fila.</p>\n<p>Dersom du fremdeles sitter fast bør du snakke med en veileder.</p>\n</section>\n<section class=\"activity\" id=\"steg-1-lage-det-hemmelige-ordet\">\n<h1 class=\"activity\" id=\"steg-1-lage-det-hemmelige-ordet\">Steg 1: Lage det hemmelige ordet</h1>\n<p>Nå skal vi skrive koden som skal kjøres når <code>create_display_string()</code> kalles.\nDenne funksjonen har to parametere - <code>secret_word</code> (det hemmelige ordet) og\n<code>remaining_letters</code> (en liste med de bokstavene brukeren ikke har gjettet).</p>\n<p>Her er et eksempel på hvordan funksjonen kan fungere:</p>\n<pre><code class=\"language-python\"><span class=\"hljs-prompt\">&gt;&gt;&gt; </span>remaining_letters =[<span class=\"hljs-string\">'b'</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'d'</span>, <span class=\"hljs-string\">'e'</span>, <span class=\"hljs-string\">'f'</span>, <span class=\"hljs-string\">'g'</span>, <span class=\"hljs-string\">'h'</span>, <span class=\"hljs-string\">'i'</span>, <span class=\"hljs-string\">'j'</span>, <span class=\"hljs-string\">'k'</span>, <span class=\"hljs-string\">'l'</span>,\n                        <span class=\"hljs-string\">'m'</span>, <span class=\"hljs-string\">'n'</span>, <span class=\"hljs-string\">'o'</span>, <span class=\"hljs-string\">'p'</span>, <span class=\"hljs-string\">'q'</span>, <span class=\"hljs-string\">'r'</span>, <span class=\"hljs-string\">'s'</span>, <span class=\"hljs-string\">'t'</span>, <span class=\"hljs-string\">'u'</span>, <span class=\"hljs-string\">'v'</span>, <span class=\"hljs-string\">'w'</span>,\n                        <span class=\"hljs-string\">'x'</span>, <span class=\"hljs-string\">'y'</span>, <span class=\"hljs-string\">'z'</span>] <span class=\"hljs-comment\"># alle bokstaver fra b til z</span>\n<span class=\"hljs-prompt\">&gt;&gt;&gt; </span>secret_word = <span class=\"hljs-string\">'banan'</span>\n<span class=\"hljs-prompt\">&gt;&gt;&gt; </span>create_display_string(secret_word, remaining_letters)\n<span class=\"hljs-string\">'_ a _ a _'</span>\n<span class=\"hljs-prompt\">&gt;&gt;&gt; </span>remaining_letters.remove(<span class=\"hljs-string\">'b'</span>)\n<span class=\"hljs-prompt\">&gt;&gt;&gt; </span>create_display_string(secret_word, remaining_letters)\n<span class=\"hljs-string\">'b a _ a _'</span>\n<span class=\"hljs-prompt\">&gt;&gt;&gt; </span>create_display_string(secret_word, [])\n<span class=\"hljs-string\">'b a n a n'</span>\n</code></pre>\n<p>Her er alle bokstaver i <code>secret_word</code> som også er i <code>remaining_letters</code>\nerstatte med <code>_</code>. Vi har også lagt inn et mellomrom mellom hvert tegn.</p>\n<p>For å lage denne funksjonen trenger vi noen av tekstfunksjonene vi lærte i\n<a href=\"../tekst_abc/tekst_abc.html\">Tekst ABC</a>. Dersom du ikke husker disse kan det\nvære lurt å gå tilbake og lese igjennom alle de gule boksene i oppgaven.</p>\n<p>Du skal nå skrive kode i funksjonen. Dette må du gjøre:</p>\n<ul>\n<li>\n<p>For å konvertere <code>secret_word</code> til ei liste må du bruke funksjonen <code>list()</code>.\nDu kan gi en streng som argument til <code>list()</code>, også returneres en liste av\nbokstaver.</p>\n<pre><code class=\"language-python\"><span class=\"hljs-prompt\">&gt;&gt;&gt; </span>list(<span class=\"hljs-string\">\"ord\"</span>)\n[<span class=\"hljs-string\">'o'</span>, <span class=\"hljs-string\">'r'</span>, <span class=\"hljs-string\">'d'</span>]\n</code></pre>\n</li>\n<li>\n<figure>Slå sammen bokstavene til en streng igjen, med ett mellomrom mellom hver\nbokstav.</figure>\n<p><strong>Hint:</strong> <code>s.join(lst)</code></p>\n</li>\n<li>\n<p>Bytt ut hver bokstav som er i det nye ordet vårt og i <code>remaining_letters</code>\nmed <code>_</code>, slik som i eksempelet over.</p>\n<p><strong>Hint:</strong> <code>s.replace()</code></p>\n</li>\n<li>\n<p>Husk å returnere det hemmelige ordet.</p>\n</li>\n</ul>\n</section>\n<section class=\"activity\" id=\"steg-2-a-starte-spillet\">\n<h1 class=\"activity\" id=\"steg-2-a-starte-spillet\">Steg 2: Å starte spillet</h1>\n<p>Nå skal vi kode funksjonen <code>start_game()</code>. Denne funksjonen lager\nnøkkel/verdi-parene i <code>state</code>. Dersom du ikke husker hvordan ordbøker fungerer\nkan det være lurt å repetere <a href=\"../ordboeker/ordboeker.html\">oppgaven om ordbøker</a>.</p>\n<figure>Nøklene i <code>state</code> er som følger:</figure>\n<ul>\n<li><code>&quot;running&quot;</code> forteller hjelpefunksjonene om spillet kjører</li>\n<li><code>&quot;used_tries&quot;</code> er hvor mange forsøk brukeren har brukt</li>\n<li><code>&quot;secret_word&quot;</code> er det ordet brukeren skal gjette</li>\n<li><code>&quot;pressed_button&quot;</code> er den siste knappen som ble trykket av brukeren</li>\n<li><code>&quot;help_text&quot;</code> er hjelpetekst for brukeren, som forklarer hva brukeren skal\ngjøre</li>\n<li><code>&quot;remaining_letters&quot;</code> er en liste over de bokstavene brukeren ikke har\ngjettet</li>\n<li><code>&quot;display_string&quot;</code> er det ordet som vises til brukeren (etter at vi har satt\ninn <code>_</code>).</li>\n</ul>\n<p>Dette må du gjøre:</p>\n<ul>\n<li>\n<p>Lag følgende nøkkel/verdi-par:</p>\n<ul>\n<li>Nøkkel: <code>&quot;running&quot;</code> Verdi: <code>True</code></li>\n<li>Nøkkel: <code>&quot;used_tries&quot;</code> Verdi: <code>0</code></li>\n<li>Nøkkel: <code>&quot;pressed_button&quot;</code> Verdi: <code>&quot;&quot;</code> (En tom streng)</li>\n<li>Nøkkel: <code>&quot;help_text&quot;</code> Verdi: <code>&quot;Guess a letter!&quot;</code></li>\n</ul>\n</li>\n<li>\n<p>For å velge et tilfeldig ord skal vi bruke <code>random.choice()</code>. Ved å gi denne\nfunksjonen en liste som argument returneres et tilfeldig element i lista.</p>\n<ul>\n<li>Gi <code>WORDS</code> som argument og bruk det returnerte ordet som verdien som\ntilhører nøkkelen <code>&quot;secret_word&quot;</code>.</li>\n</ul>\n</li>\n<li>\n<p>Vi skal nå lage lista over bokstaver som brukeren ikke har gjettet. For å\ngjøre dette bruker vi de 26 første bokstavene i <code>string.ascii_letters</code>, og\nlegger disse til lista.</p>\n<ul>\n<li>\n<figure>La den tilhørende verdien til <code>&quot;remaining_letters&quot;</code> være en tom liste.</figure>\n</li>\n<li>\n<p>Bruk <code>enumerate()</code> og gå igjennom de 26 første bokstavene i\n<code>string.ascii_letters</code>, og legg disse til <code>state[&quot;remaining_letters&quot;]</code>.</p>\n<p><strong>Hint:</strong> Bruk <code>lst.append(elm)</code></p>\n</li>\n</ul>\n</li>\n<li>\n<p>For å lage verdien som hører til <code>&quot;display_string&quot;</code> må vi bruke funksjonen\nvi lagde i <a href=\"#steg-1-lage-det-hemmelige-ordet\">steg 1</a>. Hvilke to argumenter\nskal vi gi til funksjonen?</p>\n</li>\n</ul>\n<section class=\"flag\" id=\"test-spillet-ditt\">\n<h2 class=\"flag\" id=\"test-spillet-ditt\">Test spillet ditt</h2>\n<figure>Lagre endringene dine i <code>hangman.py</code>, og kjør spillet ditt:</figure>\n<pre><code class=\"language-sh\">pgzrun hangman.py\n</code></pre>\n<p>Du skal nå få opp et vindu som ser slik ut:</p>\n<figure><img src=\"" + __webpack_require__(/*! ./hangman_initial_screen.png */ 867) + "\" alt=\"\" /></figure>\n</section>\n</section>\n<section class=\"activity\" id=\"steg-3-a-avslutte-spillet\">\n<h1 class=\"activity\" id=\"steg-3-a-avslutte-spillet\">Steg 3: Å avslutte spillet</h1>\n<p>I funksjonen <code>game_over()</code> skal vi endre <code>state</code> slik at både bruker og\nhjelpefunksjoner får beskjed om at spillet er over.</p>\n<p>Dette må du gjøre:</p>\n<ul>\n<li>\n<p>Endre <code>state[&quot;running&quot;]</code> til <code>False</code>.</p>\n</li>\n<li>\n<p>Endre verdien til <code>state[&quot;display_string&quot;]</code> slik at brukeren kan se løsningen, selv\nom brukeren ikke har vunnet.  Dette kan du gjøre ved hjelp av funksjonen fra\n<a href=\"#steg-1-lage-det-hemmelige-ordet\">steg 1</a>.</p>\n<p><strong>Hint:</strong> Hva skal listen vi gir som argument inneholde når vi ønsker å\nvise alle bokstavene?</p>\n</li>\n</ul>\n</section>\n<section class=\"activity\" id=\"steg-4-main\">\n<h1 class=\"activity\" id=\"steg-4-main\">Steg 4: main()</h1>\n<p>I dette steget skal vi skrive hovedfunksjonaliteten til spillet. Vi skal skrive\nkoden i <code>main()</code>, som kjøres hver gang spillet oppdateres. Her skal vi finne ut\nhvilken bokstav brukeren trykket på, og så sjekke om den bokstaven er inneholdt\ni ordet vårt. Vi må også oppdatere antall brukte forsøk, og til slutt sjekke om\nbrukeren har brukt opp alle forsøkene sine eller om han har gjettet riktig ord.</p>\n<p>Dette må du gjøre:</p>\n<ul>\n<li>\n<p>Du finner bokstaven brukeren trykket på i <code>state[&quot;pressed_button&quot;]</code>. Det kan\nvære lurt å lagre denne i en egen variabel, så du slipper å skrive\n<code>state[&quot;pressed_button&quot;]</code> mange ganger.</p>\n</li>\n<li>\n<p>Dersom bokstaven finnes i <code>state[&quot;remaining_letters&quot;]</code>, må programmet gjøre\ndet følgende:</p>\n<ul>\n<li>Fjern bokstaven fra lista</li>\n<li>Dersom bokstaven finnes i det hemmelige ordet vårt må du oppdatere\n<code>state[&quot;display_string&quot;]</code>, hvis ikke har brukeren brukt opp ett forsøk,\nog du må legge til en til <code>state[&quot;used_tries&quot;]</code>.</li>\n</ul>\n</li>\n<li>\n<p>Sjekk om brukeren har brukt opp alle forsøkene sine. Dersom det er tilfelle\nmå du endre på <code>state[&quot;help_text&quot;]</code> til <code>&quot;You lost!&quot;</code>. Til slutt må du kalle\nfunksjonen <code>game_over()</code>.</p>\n<p><strong>Hint:</strong> Sjekk om <code>state[&quot;used_tries&quot;]</code> er større eller lik <code>TRIES</code>.</p>\n</li>\n<li>\n<p>Vi må også sjekke om brukeren har gjettet ordet. En måte dette kan gjøres på\ner å sjekke hvor mange <code>&quot;_&quot;</code> det er i <code>state[&quot;display_string&quot;]</code>. Bruk\n<code>s.count(&quot;_&quot;)</code> for å telle antall understreker. Dersom det ikke er flere\nunderstreker har brukeren vunnet spillet, og du må da endre\n<code>state[&quot;help_text&quot;]</code> til <code>&quot;You won!&quot;</code> og kalle <code>game_over()</code>.</p>\n</li>\n</ul>\n<section class=\"flag\" id=\"test-spillet-ditt-2\">\n<h2 class=\"flag\" id=\"test-spillet-ditt-2\">Test spillet ditt</h2>\n<figure>Lagre endringene dine i <code>hangman.py</code>, og kjør spillet ditt:</figure>\n<pre><code class=\"language-sh\">pgzrun hangman.py\n</code></pre>\n<p>Spillet skal nå fungere fullt og helt. Nå er det noen ting vi må teste:</p>\n<ul>\n<li>\n<p>Slik kan det se ut når spilleren vinner.</p>\n<figure><img src=\"" + __webpack_require__(/*! ./hangman_won_game.png */ 868) + "\" alt=\"\" /></figure>\n</li>\n<li>\n<figure>Når spilleren taper kan det se ut omtrent som i bildet under. Pass på det\nfølgende:</figure>\n<ul>\n<li>Det skal ikke være mulig å taste inn flere bokstaver. Dersom du har\nmulighet til dette har du glemt å sette <code>state[&quot;running&quot;] = False</code> i\n<code>game_over()</code>.</li>\n<li>Pass på at du viser løsningsordet nederst.</li>\n</ul>\n<figure><img src=\"" + __webpack_require__(/*! ./hangman_lost_game.png */ 869) + "\" alt=\"\" /></figure>\n</li>\n</ul>\n</section>\n</section>\n";

/***/ },

/***/ 866:
/*!****************************************************************!*\
  !*** ../oppgaver/src/python/hangman2/hangman_blank_screen.png ***!
  \****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "_/oppgaver/src/python/hangman2/hangman_blank_screen.fc2b79.png";

/***/ },

/***/ 867:
/*!******************************************************************!*\
  !*** ../oppgaver/src/python/hangman2/hangman_initial_screen.png ***!
  \******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "_/oppgaver/src/python/hangman2/hangman_initial_screen.422631.png";

/***/ },

/***/ 868:
/*!************************************************************!*\
  !*** ../oppgaver/src/python/hangman2/hangman_won_game.png ***!
  \************************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "_/oppgaver/src/python/hangman2/hangman_won_game.2cafef.png";

/***/ },

/***/ 869:
/*!*************************************************************!*\
  !*** ../oppgaver/src/python/hangman2/hangman_lost_game.png ***!
  \*************************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "_/oppgaver/src/python/hangman2/hangman_lost_game.6c3c6a.png";

/***/ }

});
//# sourceMappingURL=hangman2.a50e6095881eeab648c8.js.map