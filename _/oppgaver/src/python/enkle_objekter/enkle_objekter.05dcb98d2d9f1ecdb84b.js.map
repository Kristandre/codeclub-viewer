{"version":3,"sources":["webpack:///../oppgaver/src/python/enkle_objekter/enkle_objekter.md?794c","webpack:///../oppgaver/src/python/enkle_objekter/enkle_objekter.md?288d"],"names":[],"mappings":";;;;;;;;AAAA,mBAAkB,sR;;;;;;;;;;ACAlB,moBAAkoB,6LAA6L,i2IAAi2I,2LAA2L,uqDAAuqD,eAAe,sGAAsG,qRAAqR,03BAA03B,kBAAkB,oC","file":"_/oppgaver/src/python/enkle_objekter/enkle_objekter.05dcb98d2d9f1ecdb84b.js","sourcesContent":["module.exports = {\"frontmatter\": require(\"-!json!front-matter?onlyAttributes!/home/kristoffer/Code/kodeklubben-react/oppgaver/src/python/enkle_objekter/enkle_objekter.md\"),\"content\": require(\"-!html!markdown-it!front-matter?onlyBody!/home/kristoffer/Code/kodeklubben-react/oppgaver/src/python/enkle_objekter/enkle_objekter.md\")}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/combine-loader/lib?{\"frontmatter\":[\"json\",\"front-matter?onlyAttributes\"],\"content\":[\"html\",\"markdown-it\",\"front-matter?onlyBody\"]}!../oppgaver/src/python/enkle_objekter/enkle_objekter.md\n ** module id = 845\n ** module chunks = 99\n **/","module.exports = \"<section class=\\\"intro\\\" id=\\\"introduksjon\\\">\\n<h1 class=\\\"intro\\\" id=\\\"introduksjon\\\">Introduksjon</h1>\\n<p>I denne oppgaven skal vi gi en enkel innføring til klasser og objekter (ordene forklares senere i teksten).</p>\\n</section>\\n<section class=\\\"activity\\\" id=\\\"ordboker\\\">\\n<h1 class=\\\"activity\\\" id=\\\"ordboker\\\">Ordbøker</h1>\\n</section>\\n<section class=\\\"protip\\\" id=\\\"\\\">\\n<h1 class=\\\"protip\\\" id=\\\"\\\"></h1>\\n<figure>Tenk deg at du skal lage en sirkel, og ønsker å lagre variabler som beskriver\\nradius og farge. Ved hjelp av ordbøker kan dette gjøres slik:</figure>\\n<pre><code class=\\\"language-python\\\">circle = {\\n    <span class=\\\"hljs-string\\\">\\\"radius\\\"</span> : <span class=\\\"hljs-number\\\">3</span>,\\n    <span class=\\\"hljs-string\\\">\\\"color\\\"</span> : <span class=\\\"hljs-string\\\">\\\"red\\\"</span>\\n}\\n</code></pre>\\n<p>Vi kan også hente ut og endre variablene:</p>\\n<pre><code class=\\\"language-python\\\"><span class=\\\"hljs-comment\\\"># endrer radiusen til 5</span>\\ncircle[<span class=\\\"hljs-string\\\">\\\"radius\\\"</span>] = <span class=\\\"hljs-number\\\">5</span>\\n\\n<span class=\\\"hljs-comment\\\"># skriver ut fargen på sirkelen</span>\\nprint(circle[<span class=\\\"hljs-string\\\">\\\"color\\\"</span>])\\n</code></pre>\\n<p>Hva om vi ønsker å lage en variabel som regner ut arealet til sirkelen? Vi kan\\nfor eksempel lage en funksjon <code>circle_area()</code>:</p>\\n<pre><code class=\\\"language-python\\\"><span class=\\\"hljs-keyword\\\">import</span> math\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">def</span> <span class=\\\"hljs-title\\\">circle_area</span><span class=\\\"hljs-params\\\">(circle)</span>:</span>\\n    radius = circle[<span class=\\\"hljs-string\\\">\\\"radius\\\"</span>]\\n    <span class=\\\"hljs-comment\\\"># formula: A = pi * r * r</span>\\n    area = math.pi * radius * radius\\n    <span class=\\\"hljs-keyword\\\">return</span> area\\n</code></pre>\\n<p>Så kaller vi funksjonen:</p>\\n<pre><code class=\\\"language-python\\\">print(circle_area(circle))\\n</code></pre>\\n</section>\\n<section class=\\\"activity\\\" id=\\\"klasser-og-objekter\\\">\\n<h1 class=\\\"activity\\\" id=\\\"klasser-og-objekter\\\">Klasser og objekter</h1>\\n</section>\\n<section class=\\\"protip\\\" id=\\\"-2\\\">\\n<h1 class=\\\"protip\\\" id=\\\"-2\\\"></h1>\\n<p>Vi ønsker å bruke <strong>objekter</strong> i stedet for ordbøker i de neste spillene våre.\\nVi kan la et <code>Circle</code>-objekt ha to variable <code>radius</code> og <code>color</code>. En <strong>klasse</strong>\\ner en slags 'mal' for et objekt. Klassen forteller oss hva slags verdier\\nobjektet kan ha. Vi kan lage en <code>Circle</code>-klasse, også lage et objekt av typen\\n<code>Circle</code> som vi kaller <code>circle</code> basert på klassen.</p>\\n<p>Dette er enklere å forstå med ett eksempel:</p>\\n<pre><code class=\\\"language-python\\\"><span class=\\\"hljs-comment\\\"># Vi lager Circle-klassen:</span>\\n<span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">Circle</span>:</span>\\n    radius = <span class=\\\"hljs-number\\\">3</span>\\n    color = <span class=\\\"hljs-string\\\">\\\"red\\\"</span>\\n\\n<span class=\\\"hljs-comment\\\"># Så lager vi circle-objektet</span>\\ncircle = Circle()\\n</code></pre>\\n<p>Vi lager først <code>Circle</code>-klassen, før vi så lager et <code>Circle</code>-objekt som vi\\nkaller for <code>circle</code>. <code>class</code>-nøkkelordet forteller datamaskinen at nå lager vi\\nen klasse, du kan sammenlikne det med f.eks. <code>def</code> som forteller datamaskinen\\nat nå kommer en funksjon.</p>\\n<p>Vi kan hente ut og endre variablene til objektet:</p>\\n<pre><code class=\\\"language-python\\\"><span class=\\\"hljs-comment\\\"># Endrer på radiusen</span>\\ncircle.radius = <span class=\\\"hljs-number\\\">5</span>\\n\\n<span class=\\\"hljs-comment\\\"># Skriver ut fargen</span>\\nprint(circle.color)\\n</code></pre>\\n<figure>Nå ønsker vi å lage en funksjon som kan regne ut arealet til sirkelen. Vi kan\\nlage denne funksjonen som en del av klassen:</figure>\\n<pre><code class=\\\"language-python\\\"><span class=\\\"hljs-keyword\\\">import</span> math\\n\\n<span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">Circle</span>:</span>\\n    radius = <span class=\\\"hljs-number\\\">3</span>\\n    color = <span class=\\\"hljs-string\\\">\\\"red\\\"</span>\\n\\n    <span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">def</span> <span class=\\\"hljs-title\\\">area</span><span class=\\\"hljs-params\\\">(self)</span>:</span>\\n        area = math.pi * self.radius * self.radius\\n        <span class=\\\"hljs-keyword\\\">return</span> area\\n</code></pre>\\n<p><strong>Legg merke til innrykket av <code>area()</code> i eksempelet over!</strong></p>\\n<p>Så kaller vi funksjonen:</p>\\n<pre><code class=\\\"language-python\\\">print(circle.area())\\n</code></pre>\\n<p>Du lurer kanskje på hvorfor vi brukte <code>self.radius</code> i funksjonen <code>area()</code>?\\nDette er fordi vi sier at vi vil bruke <code>radius</code>-variabelen som er en del av\\nklassen. Du må alltid bruke <code>self</code> når du skal bruke funksjoner eller\\nvariabler du har lagd i klassen.</p>\\n<p>Som vi ser så er det ikke så stor forskjell mellom bruk av funksjoner og klasser:</p>\\n<div class=\\\"col-sm-6\\\" >\\n**Ordbøker**\\n<pre><code class=\\\"language-python\\\"><span class=\\\"hljs-keyword\\\">import</span> math\\n\\ncircle = {\\n    <span class=\\\"hljs-string\\\">\\\"radius\\\"</span>: <span class=\\\"hljs-number\\\">3</span>,\\n    <span class=\\\"hljs-string\\\">\\\"color\\\"</span>: <span class=\\\"hljs-string\\\">\\\"red\\\"</span>\\n}\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">def</span> <span class=\\\"hljs-title\\\">circle_area</span><span class=\\\"hljs-params\\\">(circle)</span>:</span>\\n    area = math.pi * circle[<span class=\\\"hljs-string\\\">\\\"radius\\\"</span>] ** <span class=\\\"hljs-number\\\">2</span>\\n    <span class=\\\"hljs-keyword\\\">return</span> area\\n\\n\\n\\n\\ncircle[<span class=\\\"hljs-string\\\">\\\"radius\\\"</span>] = <span class=\\\"hljs-number\\\">5</span>\\nprint(circle[<span class=\\\"hljs-string\\\">\\\"color\\\"</span>])\\nprint(circle_area(circle))\\n</code></pre>\\n</div>\\n<div class=\\\"col-sm-6\\\" >\\n**Klasser**\\n<pre><code class=\\\"language-python\\\"><span class=\\\"hljs-keyword\\\">import</span> math\\n\\n<span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">Circle</span>:</span>\\n    radius = <span class=\\\"hljs-number\\\">3</span>\\n    color = <span class=\\\"hljs-string\\\">\\\"red\\\"</span>\\n\\n\\n    <span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">def</span> <span class=\\\"hljs-title\\\">area</span><span class=\\\"hljs-params\\\">(self)</span>:</span>\\n        area = math.pi * self.radius ** <span class=\\\"hljs-number\\\">2</span>\\n        <span class=\\\"hljs-keyword\\\">return</span> area\\n\\n\\ncircle = Circle()\\n\\ncircle.radius = <span class=\\\"hljs-number\\\">5</span>\\nprint(circle.color)\\nprint(circle.area())\\n</code></pre>\\n</div>\\n<figure>Vi kommer dermed til å bruke klasser i de neste oppgavene - det er minst like\\nenkelt som ordbøker, og man kan gjøre mer avanaserte ting med klasser.</figure>\\n</section>\\n<section class=\\\"check\\\" id=\\\"-3\\\">\\n<h1 class=\\\"check\\\" id=\\\"-3\\\"></h1>\\n<figure>Nå kommer det et program som er skrevet ved bruk av ordbøker. Du skal prøve å\\n&quot;oversette&quot; dette til et program som bruker klasser.</figure>\\n<pre><code class=\\\"language-python\\\">rectangle = {\\n    <span class=\\\"hljs-string\\\">\\\"width\\\"</span>: <span class=\\\"hljs-number\\\">3</span>,\\n    <span class=\\\"hljs-string\\\">\\\"length\\\"</span>: <span class=\\\"hljs-number\\\">5</span>,\\n    <span class=\\\"hljs-string\\\">\\\"color\\\"</span>: <span class=\\\"hljs-string\\\">\\\"blue\\\"</span>\\n}\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">def</span> <span class=\\\"hljs-title\\\">rectangle_area</span><span class=\\\"hljs-params\\\">(rectangle)</span>:</span>\\n    area = rectangle[<span class=\\\"hljs-string\\\">\\\"width\\\"</span>] * rectangle[<span class=\\\"hljs-string\\\">\\\"length\\\"</span>]\\n    <span class=\\\"hljs-keyword\\\">return</span> area\\n\\nrectangle[<span class=\\\"hljs-string\\\">\\\"width\\\"</span>] = <span class=\\\"hljs-number\\\">10</span>\\nprint(rectangle[<span class=\\\"hljs-string\\\">\\\"color\\\"</span>])\\nprint(rectangle_area(rectangle))\\n</code></pre>\\n</section>\\n<section class=\\\"flag\\\" id=\\\"test-programmet-ditt\\\">\\n<h1 class=\\\"flag\\\" id=\\\"test-programmet-ditt\\\">Test programmet ditt</h1>\\n<p>Programmet over skriver ut det følgende:</p>\\n<pre><code><span class=\\\"hljs-keyword\\\">blue\\n</span><span class=\\\"hljs-number\\\">50</span>\\n</code></pre>\\n<p>Pass på at din &quot;oversettelse&quot; gjør det samme.</p>\\n</section>\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/html-loader!./~/markdown-it-loader!./~/front-matter-loader?onlyBody!../oppgaver/src/python/enkle_objekter/enkle_objekter.md\n ** module id = 847\n ** module chunks = 99\n **/"],"sourceRoot":""}