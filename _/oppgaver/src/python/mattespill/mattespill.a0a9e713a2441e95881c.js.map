{"version":3,"sources":["webpack:///../oppgaver/src/python/mattespill/mattespill.md?9878","webpack:///../oppgaver/src/python/mattespill/mattespill.md?07e0","webpack:///../oppgaver/src/python/mattespill/mattespill.png"],"names":[],"mappings":";;;;;;;;AAAA,mBAAkB,sQ;;;;;;;;;;ACAlB,i2BAA20B,4yd;;;;;;;;;;ACA30B,mG","file":"_/oppgaver/src/python/mattespill/mattespill.a0a9e713a2441e95881c.js","sourcesContent":["module.exports = {\"frontmatter\": require(\"-!json!front-matter?onlyAttributes!/home/kristoffer/Code/kodeklubben-react/oppgaver/src/python/mattespill/mattespill.md\"),\"content\": require(\"-!html!markdown-it!front-matter?onlyBody!/home/kristoffer/Code/kodeklubben-react/oppgaver/src/python/mattespill/mattespill.md\")}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/combine-loader/lib?{\"frontmatter\":[\"json\",\"front-matter?onlyAttributes\"],\"content\":[\"html\",\"markdown-it\",\"front-matter?onlyBody\"]}!../oppgaver/src/python/mattespill/mattespill.md\n ** module id = 918\n ** module chunks = 113\n **/","module.exports = \"<section class=\\\"intro\\\" id=\\\"introduksjon\\\">\\n<h1 class=\\\"intro\\\" id=\\\"introduksjon\\\">Introduksjon</h1>\\n<p>I denne leksjonen vil vi se litt nærmere på hvordan Python jobber med\\ntall, og vi vil lage et enkelt mattespill. Vi vil også se hvordan vi\\nkan gjøre ting tilfeldige.</p>\\n<figure><img src=\\\"\" + require(\"./mattespill.png\") + \"\\\" alt=\\\"\\\" /></figure>\\n</section>\\n<section class=\\\"activity\\\" id=\\\"steg-1-en-kalkulator\\\">\\n<h1 class=\\\"activity\\\" id=\\\"steg-1-en-kalkulator\\\">Steg 1: En kalkulator!</h1>\\n<figure>Python er, som de fleste programmeringsspråk, veldig glad i å regne.\\nLa oss se hvordan vi kan få Python til å regne for oss.</figure>\\n<section class=\\\"check\\\" id=\\\"sjekkliste\\\">\\n<h2 class=\\\"check\\\" id=\\\"sjekkliste\\\">Sjekkliste</h2>\\n<ul>\\n<li>\\n<figure>Lag et nytt IDLE-vindu ved å velge <code>File &gt; New File</code>.</figure>\\n</li>\\n<li>\\n<figure>Vi begynner med å utforske hvordan vi kan bruke Python til å regne\\nut enkle mattestykker. Skriv det følgende nye programmet:</figure>\\n<pre><code class=\\\"language-python\\\">print(<span class=\\\"hljs-number\\\">2</span> + <span class=\\\"hljs-number\\\">3</span>)\\nprint(<span class=\\\"hljs-number\\\">17</span> - <span class=\\\"hljs-number\\\">8</span>)\\nprint(<span class=\\\"hljs-number\\\">3</span> * <span class=\\\"hljs-number\\\">4</span>)\\nprint(<span class=\\\"hljs-number\\\">22</span> / <span class=\\\"hljs-number\\\">7</span>)\\n</code></pre>\\n<figure>Lagre programmet med navnet <code>kalkulator.py</code> og kjør det.</figure>\\n</li>\\n<li>\\n<p>Når programmet kjører vil det skrive ut 4 tall. Kjenner du igjen\\ndisse tallene? Skjønner du hva symbolene <code>*</code> og <code>/</code> betyr? Endre\\ngjerne på programmet og kjør det flere ganger til du skjønner\\nhvordan Python bruker pluss, minus, gange og dele.</p>\\n</li>\\n</ul>\\n</section>\\n</section>\\n<section class=\\\"activity\\\" id=\\\"steg-2-vi-kaster-terning\\\">\\n<h1 class=\\\"activity\\\" id=\\\"steg-2-vi-kaster-terning\\\">Steg 2: Vi kaster terning</h1>\\n<figure>For å lage et mattespill vil vi bruke tilfeldige tall. Tilfeldige tall\\nblir omtrent som å slå terning for å finne et tall.</figure>\\n<section class=\\\"check\\\" id=\\\"sjekkliste-2\\\">\\n<h2 class=\\\"check\\\" id=\\\"sjekkliste-2\\\">Sjekkliste</h2>\\n<ul>\\n<li>\\n<p>For å lage tilfeldige tall skal vi bruke en ny Python-funksjon som\\nheter <code>randint</code> (her er <code>rand</code> en forkortelse for <em>random</em> som betyr\\ntilfeldig, og <code>int</code> en forkortelse for <em>integer</em> som betyr\\nheltall). Denne funksjonen er ikke med i grunnpakken til Python, men\\nligger i stedet i et bibliotek kalt <code>random</code>. Vi må derfor fortelle\\nPython at vi vil bruke dette biblioteket. Lag et nytt program,\\n<code>terning.py</code> som ser slik ut:</p>\\n<pre><code class=\\\"language-python\\\"><span class=\\\"hljs-keyword\\\">from</span> random <span class=\\\"hljs-keyword\\\">import</span> randint\\nprint(randint(<span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">6</span>))\\n</code></pre>\\n<figure>Når du kjører programmet vil det skrive ut et tilfeldig tall\\nmellom 1 og 6. Kjør programmet flere ganger. Forandrer tallet seg?</figure>\\n</li>\\n<li>\\n<figure>Prøv selv å forandre programmet slik at det skriver ut tilfeldige\\ntall mellom 1 og 20! Eller mellom -1 og 1.</figure>\\n</li>\\n<li>\\n<p>Programmet <code>terning.py</code> viser hvordan vi kan late som om vi slår èn\\nterning i Python. Men hvordan kan vi late som om vi slår to\\nterninger, og ser summen av dem?</p>\\n</li>\\n<li>\\n<p>Vi kan også utvide programmet slik at det slår terning mange\\nganger. Dette gjør vi enklest med <strong>for-løkker</strong>. Hvis du for\\neksempel utvider programmet ditt som følger vil det se ut som om du\\nslår to terninger 25 ganger:</p>\\n<pre><code class=\\\"language-python\\\"><span class=\\\"hljs-keyword\\\">from</span> random <span class=\\\"hljs-keyword\\\">import</span> randint\\n\\n<span class=\\\"hljs-keyword\\\">for</span> i <span class=\\\"hljs-keyword\\\">in</span> range(<span class=\\\"hljs-number\\\">25</span>):\\n    print(randint(<span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">6</span>) + randint(<span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">6</span>))\\n</code></pre>\\n</li>\\n</ul>\\n</section>\\n</section>\\n<section class=\\\"activity\\\" id=\\\"steg-3-en-liten-matteprove\\\">\\n<h1 class=\\\"activity\\\" id=\\\"steg-3-en-liten-matteprove\\\">Steg 3: En liten matteprøve</h1>\\n<p>Vi kan nå bruke tilfeldige tall til å lage et enkelt mattespill.</p>\\n<section class=\\\"check\\\" id=\\\"sjekkliste-3\\\">\\n<h2 class=\\\"check\\\" id=\\\"sjekkliste-3\\\">Sjekkliste</h2>\\n<ul>\\n<li>\\n<p>Lag et nytt program som heter <code>mattespill.py</code>. Vi begynner med å\\ntrekke to tilfeldige tall, og la Python gange dem sammen:</p>\\n<pre><code class=\\\"language-python\\\"><span class=\\\"hljs-keyword\\\">from</span> random <span class=\\\"hljs-keyword\\\">import</span> randint\\n\\ntall1 = randint(<span class=\\\"hljs-number\\\">2</span>, <span class=\\\"hljs-number\\\">12</span>)\\ntall2 = randint(<span class=\\\"hljs-number\\\">2</span>, <span class=\\\"hljs-number\\\">12</span>)\\n</code></pre>\\n</li>\\n<li>\\n<p>Vi vil nå at Python skal gi oss en matteoppgave, kan vi bli spurt om\\nå gange sammen <code>tall1</code> og <code>tall2</code>? Prøv å legg til denne linjen\\nnederst i programmet ditt:</p>\\n<pre><code class=\\\"language-python\\\">print(<span class=\\\"hljs-string\\\">'Hva er '</span> + tall1 + <span class=\\\"hljs-string\\\">' ganger '</span> + tall2 + <span class=\\\"hljs-string\\\">'?'</span>)\\n</code></pre>\\n<p>Hva skjer når du prøver å kjøre programmet?</p>\\n</li>\\n<li>\\n<p>Du husker kanskje at vi kan bruke <code>+</code> for å sette sammen tekst? Men\\nvi bruker også <code>+</code> for å plusse sammen tall. I linjen over prøver vi\\nå bruke <code>+</code> på både tekst og tall, og da skjønner ikke Python helt\\nhva vi mener.</p>\\n<p>For å fortelle Python at her vil vi egentlig sette sammen tekst må\\nvi bruke funksjonen <code>str</code> for å gjøre om tallene til\\ntekststrenger. Endre den siste linjen slik at den ser slik ut i\\nstedet:</p>\\n<pre><code class=\\\"language-python\\\">print(<span class=\\\"hljs-string\\\">'Hva er '</span> + str(tall1) + <span class=\\\"hljs-string\\\">' ganger '</span> + str(tall2) + <span class=\\\"hljs-string\\\">'?'</span>)\\n</code></pre>\\n<figure>Virker programmet ditt bedre nå? Prøv å kjøre programmet flere\\nganger. Blir du stilt forskjellige spørsmål?</figure>\\n</li>\\n<li>\\n<p>Neste steg er at vi vil kunne svare på mattestykket. Til dette\\nbruker vi igjen funksjonen <code>input</code>. Legg til linjen</p>\\n<pre><code class=\\\"language-python\\\">svar = input()\\n</code></pre>\\n<p>nederst i programmet.</p>\\n</li>\\n<li>\\n<p>Vi skal nå få programmet til å sjekke at vi har svart riktig. For å\\ngjøre dette skal vi bruke noe som heter <strong>if-tester</strong>. Disse kan\\nsjekke om noe er sant, og vi vil bruke dem for å sjekke om det er\\nsant at svaret ditt er likt med det faktiske svaret. Legg til en\\n<strong>if-test</strong> nederst i programmet ditt slik som dette:</p>\\n<pre><code class=\\\"language-python\\\"><span class=\\\"hljs-keyword\\\">from</span> random <span class=\\\"hljs-keyword\\\">import</span> randint\\n\\ntall1 = randint(<span class=\\\"hljs-number\\\">2</span>, <span class=\\\"hljs-number\\\">12</span>)\\ntall2 = randint(<span class=\\\"hljs-number\\\">2</span>, <span class=\\\"hljs-number\\\">12</span>)\\n\\nprint(<span class=\\\"hljs-string\\\">'Hva er '</span> + str(tall1) + <span class=\\\"hljs-string\\\">' ganger '</span> + str(tall2) + <span class=\\\"hljs-string\\\">'?'</span>)\\nsvar = input()\\n\\n<span class=\\\"hljs-keyword\\\">if</span> svar == tall1 * tall2:\\n    print(<span class=\\\"hljs-string\\\">'Ja, svaret er '</span> + svar)\\n<span class=\\\"hljs-keyword\\\">else</span>:\\n    print(<span class=\\\"hljs-string\\\">'Nei, det riktige svaret er '</span> + str(tall1 * tall2))\\n</code></pre>\\n<p>Pass på at som i <strong>for-løkker</strong> må du skyve koden i <strong>if-testen</strong>\\ninn mot høyre.</p>\\n</li>\\n<li>\\n<figure>Kjør programmet ditt. Virker det? Hva skjer om du svarer feil på en\\noppgave? Hva skjer om du svarer riktig?</figure>\\n<figure>Hmm ... det er et problem med programmet vårt. Programmet sier at\\nvi svarer feil selv om vi svarer riktig!</figure>\\n</li>\\n</ul>\\n<section class=\\\"protip\\\" id=\\\"bugs\\\">\\n<h3 class=\\\"protip\\\" id=\\\"bugs\\\">Bugs</h3>\\n<p>Dette er et eksempel på noe vi kaller en bug i et program. Programmet\\nkjører, men det gjør ikke slik som vi hadde ment og forventet. Selve\\nordet <em>bug</em> betyr insekt, og grunnen til at dette ordet brukes er at i\\ngamle dager var det faktisk et problem at insekter fløy inn i\\ndatamaskiner og ødela programmer!</p>\\n</section>\\n</section>\\n<section class=\\\"check\\\" id=\\\"sjekkliste-4\\\">\\n<h2 class=\\\"check\\\" id=\\\"sjekkliste-4\\\">Sjekkliste</h2>\\n<ul>\\n<li>\\n<p>Problemet med programmet vårt er ikke helt lett å finne, men siden\\nprogrammet alltid sier at svaret vårt er feil må det bety at <code>svar</code>\\naldri er helt lik <code>tall1 * tall2</code>. Igjen er problemet at Python\\nmener at tekst og tall er forskjellige ting.</p>\\n<p>Når vi bruker <code>input</code> til å lese inn <code>svar</code> vil dette alltid være\\ntekst, selv om vi bare skriver inn tall. På samme måte som vi kan\\nbruke <code>str</code> for å gjøre om tall til tekst kan vi bruke <code>int</code> for å\\ngjøre om tekst til tall (husk at <code>int</code> er en forkortelse for\\n<em>integer</em> som betyr heltall).</p>\\n<figure>Endre <code>if</code>-linjen i programmet ditt til</figure>\\n<pre><code class=\\\"language-python\\\"><span class=\\\"hljs-keyword\\\">if</span> int(svar) == tall1 * tall2:\\n</code></pre>\\n<p>Virker programmet bedre nå?</p>\\n</li>\\n</ul>\\n</section>\\n</section>\\n<section class=\\\"activity\\\" id=\\\"steg-4-telle-riktige-svar\\\">\\n<h1 class=\\\"activity\\\" id=\\\"steg-4-telle-riktige-svar\\\">Steg 4: Telle riktige svar</h1>\\n<figure>Det er litt kjedelig å alltid starte programmet på nytt. La oss prøve\\nå stille flere mattestykker etter hverandre.</figure>\\n<section class=\\\"check\\\" id=\\\"sjekkliste-5\\\">\\n<h2 class=\\\"check\\\" id=\\\"sjekkliste-5\\\">Sjekkliste</h2>\\n<ul>\\n<li>\\n<p>Hvordan kan vi lage en løkke slik at programmet stiller oss for\\neksempel 5 mattestykker på rad før det avsluttes. Prøv litt selv før\\ndu går videre.</p>\\n</li>\\n<li>\\n<p>Til slutt vil vi at programmet også skal telle hvor mange riktige\\nsvar vi klarer. For å gjøre dette skal vi bruke en variabel som vi\\nfor eksempel kan kalle <code>ant_rett</code>. Når vi begynner spillet passer\\nvi på at denne er <code>0</code> siden vi ikke har svart noenting enda. Hver\\ngang vi svarer riktig kan vi så øke verdien av variabelen med 1. Om\\nvi også legger til en melding til slutt om hvor mange riktige svar\\nspilleren klarte vil programmet se omtrent ut som følger:</p>\\n<pre><code class=\\\"language-python\\\"><span class=\\\"hljs-keyword\\\">from</span> random <span class=\\\"hljs-keyword\\\">import</span> randint\\n\\nant_stykker = <span class=\\\"hljs-number\\\">5</span>\\nant_rett = <span class=\\\"hljs-number\\\">0</span>\\n\\n<span class=\\\"hljs-keyword\\\">for</span> i <span class=\\\"hljs-keyword\\\">in</span> range(ant_stykker):\\n    tall1 = randint(<span class=\\\"hljs-number\\\">2</span>, <span class=\\\"hljs-number\\\">12</span>)\\n    tall2 = randint(<span class=\\\"hljs-number\\\">2</span>, <span class=\\\"hljs-number\\\">12</span>)\\n\\n    print(<span class=\\\"hljs-string\\\">'Hva er '</span> + str(tall1) + <span class=\\\"hljs-string\\\">' ganger '</span> + str(tall2) + <span class=\\\"hljs-string\\\">'?'</span>)\\n    svar = input()\\n\\n    <span class=\\\"hljs-keyword\\\">if</span> int(svar) == tall1 * tall2:\\n        print(<span class=\\\"hljs-string\\\">'Ja, svaret er '</span> + svar)\\n        ant_rett = ant_rett + <span class=\\\"hljs-number\\\">1</span>\\n    <span class=\\\"hljs-keyword\\\">else</span>:\\n        print(<span class=\\\"hljs-string\\\">'Nei, det riktige svaret er '</span> + str(tall1 * tall2))\\n\\nprint(<span class=\\\"hljs-string\\\">'Du fikk '</span> + str(ant_rett) + <span class=\\\"hljs-string\\\">' av '</span> + str(ant_stykker))\\n</code></pre>\\n</li>\\n</ul>\\n</section>\\n</section>\\n<section class=\\\"activity\\\" id=\\\"steg-5-rekursjon-hva-er-det\\\">\\n<h1 class=\\\"activity\\\" id=\\\"steg-5-rekursjon-hva-er-det\\\">Steg 5: Rekursjon, hva er det?</h1>\\n<figure>Vi avslutter med å se på noe som heter rekursjon. Dette er en veldig\\nstilig ide, som brukes en del i programmering.</figure>\\n<p>Vi vil skrive et program som kan regne ut fakultetet av et tall.\\nFakultetet finner man ved å gange tallet med alle tall som er mindre\\nenn seg. For eksempel er fakultetet av 4</p>\\n<pre><code>fakultet(<span class=\\\"hljs-number\\\">4</span>) = <span class=\\\"hljs-number\\\">4</span> * <span class=\\\"hljs-number\\\">3</span> * <span class=\\\"hljs-number\\\">2</span> * <span class=\\\"hljs-number\\\">1</span> = <span class=\\\"hljs-number\\\">24</span>\\n</code></pre>\\n<p>Trikset med rekursjon er at vi kan redusere oppgaven til noe som er\\nveldig likt, men litt enklere. For eksempel kan vi her se at hvis vi\\nhadde visst fakultetet av 3 kunne vi funnet fakultetet av 4 bare ved å\\ngange med 4:</p>\\n<pre><code>fakultet(<span class=\\\"hljs-number\\\">4</span>) = <span class=\\\"hljs-number\\\">4</span> * <span class=\\\"hljs-number\\\">3</span> * <span class=\\\"hljs-number\\\">2</span> * <span class=\\\"hljs-number\\\">1</span> = <span class=\\\"hljs-number\\\">4</span> * fakultet(<span class=\\\"hljs-number\\\">3</span>)\\n</code></pre>\\n<figure>Videre kan vi finne fakultetet av 3 hvis vi vet fakultetet av 2 og så\\nvidere:</figure>\\n<pre><code>fakultet(<span class=\\\"hljs-number\\\">3</span>) = <span class=\\\"hljs-number\\\">3</span> * <span class=\\\"hljs-number\\\">2</span> * <span class=\\\"hljs-number\\\">1</span> = <span class=\\\"hljs-number\\\">3</span> * fakultet(<span class=\\\"hljs-number\\\">2</span>)\\nfakultet(<span class=\\\"hljs-number\\\">2</span>) = <span class=\\\"hljs-number\\\">2</span> * <span class=\\\"hljs-number\\\">1</span> = <span class=\\\"hljs-number\\\">2</span> * fakultet(<span class=\\\"hljs-number\\\">1</span>)\\nfakultet(<span class=\\\"hljs-number\\\">1</span>) = <span class=\\\"hljs-number\\\">1</span>\\n</code></pre>\\n<section class=\\\"check\\\" id=\\\"sjekkliste-6\\\">\\n<h2 class=\\\"check\\\" id=\\\"sjekkliste-6\\\">Sjekkliste</h2>\\n<ul>\\n<li>\\n<p>La oss se om vi kan skrive et program som jobber på denne måten.\\nLag et nytt program som du kaller <code>fakultet.py</code>:</p>\\n<pre><code class=\\\"language-python\\\"><span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">def</span> <span class=\\\"hljs-title\\\">fakultet</span><span class=\\\"hljs-params\\\">(tall)</span>:</span>\\n    <span class=\\\"hljs-keyword\\\">if</span> tall == <span class=\\\"hljs-number\\\">1</span>:\\n        <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-number\\\">1</span>\\n\\nprint(fakultet(<span class=\\\"hljs-number\\\">1</span>))\\n</code></pre>\\n<p>Her bruker vi flere ting du har sett tidligere. Husk at <code>def</code>\\nbrukes for å lage egne funksjoner. Her lager vi funksjonen\\n<code>fakultet</code> som vi etterpå kaller inne i <code>print</code>-funksjonen.</p>\\n</li>\\n<li>\\n<p>Foreløbig har vi bare sagt at vi vet at fakultetet av 1 er 1. Men nå\\nkommer det stilige. Vi kan regne ut fakultetet av <strong>alle</strong> andre\\ntall ved å legge på en enkelt kodelinje:</p>\\n<pre><code class=\\\"language-python\\\"><span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">def</span> <span class=\\\"hljs-title\\\">fakultet</span><span class=\\\"hljs-params\\\">(tall)</span>:</span>\\n    <span class=\\\"hljs-keyword\\\">if</span> tall == <span class=\\\"hljs-number\\\">1</span>:\\n        <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-number\\\">1</span>\\n    <span class=\\\"hljs-keyword\\\">return</span> tall * fakultet(tall-<span class=\\\"hljs-number\\\">1</span>)\\n\\nprint(fakultet(<span class=\\\"hljs-number\\\">4</span>))\\n</code></pre>\\n<figure>Denne linjen sier at fakultetet til et tall er tallet selv ganget\\nmed fakultetet til tallet som er en mindre.</figure>\\n<p>Prøv å regne ut fakultetet av andre tall. Skjønner du hvordan\\ndette virker? Det er en litt merkelig måte å tenke på, så du må\\nkanskje venne deg til det?</p>\\n</li>\\n</ul>\\n</section>\\n</section>\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/html-loader!./~/markdown-it-loader!./~/front-matter-loader?onlyBody!../oppgaver/src/python/mattespill/mattespill.md\n ** module id = 920\n ** module chunks = 113\n **/","module.exports = __webpack_public_path__ + \"_/oppgaver/src/python/mattespill/mattespill.486310.png\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../oppgaver/src/python/mattespill/mattespill.png\n ** module id = 921\n ** module chunks = 113\n **/"],"sourceRoot":""}