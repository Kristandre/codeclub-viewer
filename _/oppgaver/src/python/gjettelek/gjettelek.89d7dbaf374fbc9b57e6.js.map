{"version":3,"sources":["webpack:///../oppgaver/src/python/gjettelek/gjettelek.md?c2f6","webpack:///../oppgaver/src/python/gjettelek/gjettelek.md?9bb5","webpack:///../oppgaver/src/python/gjettelek/python_guessing_game.png"],"names":[],"mappings":";;;;;;;;AAAA,mBAAkB,kQ;;;;;;;;;;ACAlB,w+K;;;;;;;;;;ACAA,4G","file":"_/oppgaver/src/python/gjettelek/gjettelek.89d7dbaf374fbc9b57e6.js","sourcesContent":["module.exports = {\"frontmatter\": require(\"-!json!front-matter?onlyAttributes!/home/kristoffer/Code/kodeklubben-react/oppgaver/src/python/gjettelek/gjettelek.md\"),\"content\": require(\"-!html!markdown-it!front-matter?onlyBody!/home/kristoffer/Code/kodeklubben-react/oppgaver/src/python/gjettelek/gjettelek.md\")}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/combine-loader/lib?{\"frontmatter\":[\"json\",\"front-matter?onlyAttributes\"],\"content\":[\"html\",\"markdown-it\",\"front-matter?onlyBody\"]}!../oppgaver/src/python/gjettelek/gjettelek.md\n ** module id = 854\n ** module chunks = 101\n **/","module.exports = \"<section class=\\\"intro\\\" id=\\\"gjett-et-tall\\\">\\n<h1 class=\\\"intro\\\" id=\\\"gjett-et-tall\\\">Gjett et tall! </h1>\\n<p>I denne oppgaven skal du lage en spill som kalles gjetteleken. Det er meningen at du i denne oppgaven skal skrive all koden selv, ved hjelp av litt hint.</p>\\n<p>Spillet er som følger:</p>\\n<ol>\\n<li>Programmet finner et tilfeldig tall mellom 1 og 100</li>\\n<li>Brukeren gjetter et tall mellom 1 og 100.</li>\\n<li>Programmet skriver ut:</li>\\n</ol>\\n<ul>\\n<li><code>Higher!</code> hvis tallet var for lavt.</li>\\n<li><code>Lower!</code> hvis tallet var for høyt.</li>\\n<li>Hvis brukeren gjetter riktig tall skal programmet skrive ut <code>Correct!</code> og avslutte.</li>\\n</ul>\\n<ol start=\\\"3\\\">\\n<li>Så lenge brukeren ikke har gjettet tallet, så må programmet spørre om et nytt tall (brukeren har uendelig mange forsøk).</li>\\n</ol>\\n<p>Slik ser det ut når programmet kjører:</p>\\n<figure><img src=\\\"\" + require(\"./python_guessing_game.png\") + \"\\\" alt=\\\"\\\" /></figure>\\n</section>\\n<section class=\\\"activity\\\" id=\\\"klar-ferdig-programmer\\\">\\n<h1 class=\\\"activity\\\" id=\\\"klar-ferdig-programmer\\\">Klar, ferdig, programmer!</h1>\\n<p>Nå er det bare å sette i gang! Pass på at du forstår hvordan spillet fungerer før du begynner å programmere! Her er noen hint for å hjelpe deg på vei:</p>\\n<section class=\\\"protip\\\" id=\\\"randint\\\">\\n<h2 class=\\\"protip\\\" id=\\\"randint\\\">randint()</h2>\\n<p>For å generere tilfelige tall kan det være lurt å bruke funksjonen <code>randint()</code>.\\nFor å bruke <code>randint()</code>, må vi importere funksjonen:</p>\\n<pre><code class=\\\"language-python\\\"><span class=\\\"hljs-keyword\\\">from</span> random <span class=\\\"hljs-keyword\\\">import</span> randint\\n</code></pre>\\n<p>Hva gjør disse funksjonskallene?</p>\\n<ul>\\n<li><code>randint(1, 100)</code></li>\\n<li><code>randint(1000, 1000000)</code></li>\\n<li><code>randint(101, 102)</code></li>\\n</ul>\\n</section>\\n<section class=\\\"protip\\\" id=\\\"int\\\">\\n<h2 class=\\\"protip\\\" id=\\\"int\\\">int()</h2>\\n<p>Når man får input fra brukeren får man en <em>tekststreng</em>, selv om brukeren skrev et tall, da kan det være greit å kunne konvertere teksten til et tall, ved hjelp av <code>int()</code>.</p>\\n<p>Hva er forskjellen på disse kodesnuttene? (Kjør koden og test selv!)</p>\\n<pre><code class=\\\"language-python\\\">tall = input(<span class=\\\"hljs-string\\\">\\\"Skriv et tall: \\\"</span>)\\nsvar = <span class=\\\"hljs-number\\\">3</span> + tall\\nprint(svar)\\n</code></pre>\\n<pre><code class=\\\"language-python\\\">tall = int(input(<span class=\\\"hljs-string\\\">\\\"Skriv et tall: \\\"</span>))\\nsvar = <span class=\\\"hljs-number\\\">3</span> + tall\\nprint(svar)\\n</code></pre>\\n</section>\\n<section class=\\\"protip\\\" id=\\\"kontrollstrukturer\\\">\\n<h2 class=\\\"protip\\\" id=\\\"kontrollstrukturer\\\">Kontrollstrukturer</h2>\\n<p>Hva slags kontrollstrukturer trenger du?</p>\\n<p>Eksempel på kontrollstrukturer er <code>for</code>-løkker, <code>while</code>-løkker og <code>if-elif-else</code>-uttrykk.</p>\\n<ul>\\n<li>\\n<p><code>for</code>-løkker bruker vi når vi vil gjøre noe mange ganger.</p>\\n<figure><strong>Eksempel:</strong></figure>\\n<pre><code class=\\\"language-python\\\"><span class=\\\"hljs-comment\\\"># skriv ut ti tall</span>\\n<span class=\\\"hljs-keyword\\\">for</span> i <span class=\\\"hljs-keyword\\\">in</span> range(<span class=\\\"hljs-number\\\">10</span>):\\n    print(<span class=\\\"hljs-string\\\">'variabelen i er: '</span> + str(i))\\n</code></pre>\\n</li>\\n<li>\\n<p><code>while</code>-løkker brukes når vi vil gjøre noe mange ganger inntil en variabel\\nendrer seg.</p>\\n<figure><strong>Eksempel:</strong></figure>\\n<pre><code class=\\\"language-python\\\"> a = <span class=\\\"hljs-number\\\">0</span>\\n <span class=\\\"hljs-comment\\\"># så lenge variablen `a` ikke er lik `10`</span>\\n <span class=\\\"hljs-keyword\\\">while</span> a != <span class=\\\"hljs-number\\\">10</span>:\\n     print(a)\\n     a = a + <span class=\\\"hljs-number\\\">1</span>\\n</code></pre>\\n<figure>Prøv å se hva som skjer dersom du ikke tar med linjen <code>a = a + 1</code>.</figure>\\n</li>\\n<li>\\n<p><code>if-elif-else</code>-uttrykk kan bestemme om vi skal kjøre en spesiell kode.</p>\\n<figure><strong>Eksempel:</strong></figure>\\n<pre><code class=\\\"language-python\\\">a = <span class=\\\"hljs-number\\\">1</span>\\n<span class=\\\"hljs-keyword\\\">if</span> a == <span class=\\\"hljs-number\\\">2</span>:\\n  print(<span class=\\\"hljs-string\\\">'a er 2'</span>)\\n<span class=\\\"hljs-keyword\\\">elif</span> a == <span class=\\\"hljs-number\\\">3</span>:\\n  print(<span class=\\\"hljs-string\\\">'a er 3'</span>)\\n<span class=\\\"hljs-keyword\\\">else</span>:\\n  print(<span class=\\\"hljs-string\\\">'a er ikke 2 og ikke 3'</span>)\\n</code></pre>\\n<p>Prøv å endre verdien <code>a</code> på toppen til <code>2</code> eller <code>3</code> og se hva som skjer.</p>\\n</li>\\n</ul>\\n</section>\\n</section>\\n<section class=\\\"activity\\\" id=\\\"test-programmet-ditt\\\">\\n<h1 class=\\\"activity\\\" id=\\\"test-programmet-ditt\\\">Test programmet ditt</h1>\\n<p>Fungerer det slik som i beskrivelsen i begynnelsen av oppgaven? Hvis ikke må du rette feilene dine.</p>\\n<section class=\\\"challenge\\\" id=\\\"7-forsok\\\">\\n<h2 class=\\\"challenge\\\" id=\\\"7-forsok\\\">7 forsøk</h2>\\n<p>Ettersom vi bare har tall mellom 1 og 100 kan vi alltid gjette tallet på 7 forsøk eller bedre. Klarer du dette selv?</p>\\n</section>\\n<section class=\\\"challenge\\\" id=\\\"begrense-brukerens-forsok\\\">\\n<h2 class=\\\"challenge\\\" id=\\\"begrense-brukerens-forsok\\\">Begrense brukerens forsøk</h2>\\n<p>Til nå har brukeren hatt uendelig mange forsøk. Klarer du å skrive om koden din slik at brukeren bare får 12 forsøk?</p>\\n</section>\\n</section>\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/html-loader!./~/markdown-it-loader!./~/front-matter-loader?onlyBody!../oppgaver/src/python/gjettelek/gjettelek.md\n ** module id = 856\n ** module chunks = 101\n **/","module.exports = __webpack_public_path__ + \"_/oppgaver/src/python/gjettelek/python_guessing_game.282d7d.png\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../oppgaver/src/python/gjettelek/python_guessing_game.png\n ** module id = 857\n ** module chunks = 101\n **/"],"sourceRoot":""}