webpackJsonp([215,236],{

/***/ 1498:
/*!*************************************************************************************************************************************************************************************************!*\
  !*** ./~/combine-loader/lib?{"frontmatter":["json","front-matter?onlyAttributes"],"content":["html","markdown-it","front-matter?onlyBody"]}!../oppgaver/src/unity/rull-en-ball/rull-en-ball.md ***!
  \*************************************************************************************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = {"frontmatter": __webpack_require__(/*! -!json!front-matter?onlyAttributes!../oppgaver/src/unity/rull-en-ball/rull-en-ball.md */ 1499),"content": __webpack_require__(/*! -!html!markdown-it!front-matter?onlyBody!../oppgaver/src/unity/rull-en-ball/rull-en-ball.md */ 1500)}

/***/ },

/***/ 1500:
/*!**********************************************************************************************************************************!*\
  !*** ./~/html-loader!./~/markdown-it-loader!./~/front-matter-loader?onlyBody!../oppgaver/src/unity/rull-en-ball/rull-en-ball.md ***!
  \**********************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = "<section class=\"intro\" id=\"rull-en-ball\">\n<h1 class=\"intro\" id=\"rull-en-ball\">Rull-en-ball</h1>\n<p>Denne uka skal vi lage vårt første spill! Spillet går ut på å være en ball og\nsamle inn kuber for å få poeng. Spillet er over når man har samlet inn alle\nkubene.</p>\n<p>Denne oppgaven tar utgangspunkt i <a href=\"http://unity3d.com/learn/tutorials/projects/roll-ball-tutorial\">Roll-a-Ball på Unity sine sider</a>.\nTitlene i denne oppgaven er lenket direkte til videoene på Unity sine sider\nder det er aktuelt. Du finner også lenker til alle videoene på <a href=\"http://unity3d.com/learn/tutorials/projects/roll-ball-tutorial\">unity3d.com/learn/tutorials/projects/roll-ball-tutorial</a>.</p>\n</section>\n<section class=\"activity\" id=\"steg-1-omgivelser-og-spilleren\">\n<h1 class=\"activity\" id=\"steg-1-omgivelser-og-spilleren\">Steg 1: Omgivelser og spilleren</h1>\n<section id=\"introduksjon\">\n<h2 id=\"introduksjon\"><a href=\"http://unity3d.com/learn/tutorials/projects/roll-a-ball/introduction?playlist=17141\">Introduksjon</a></h2>\n<p>Bildet nedenfor viser hvordan spillet ser ut når man er ferdig! I\ndenne oppgaven lærer vi litt enkel fysikk, hvordan vi kan flytte\nspillobjekter med tastaturet, og kollisjon mellom objekter.</p>\n<figure><img src=\"" + __webpack_require__(/*! ./rull-en-ball.png */ 1501) + "\" alt=\"\" /></figure>\n</section>\n<section class=\"check\" id=\"oppsett-av-spillet\">\n<h2 class=\"check\" id=\"oppsett-av-spillet\"><a href=\"http://unity3d.com/learn/tutorials/projects/roll-a-ball/set-up?playlist=17141\">Oppsett av spillet</a></h2>\n<ul>\n<li>Start med å lage et nytt 3D-prosjekt.</li>\n<li>Lagre Scenen, <strong>File &gt; Save Scene</strong>, legg den i en ny mappe <code>Assets/_Scenes</code> og\nkall den <code>Minigame</code>.</li>\n<li>Lag brettet vi skal spille på. Dette er et 3D-plan. Du finner den i hierarkiet under <strong>Create &gt; 3D Objekt &gt; Plane</strong>. Kall dette objektet <code>Ground</code>.</li>\n<li>Flytt brettet til origo, <code>(0, 0, 0)</code>, ved å trykke på tannhjulet i\nTransform-komponenten og velge <strong>Reset</strong>.</li>\n<li>Skru av Grid-lines på Scenen. Dette finner du under <strong>Gizmos &gt; Show Grid</strong>.</li>\n<li>Lag bakken litt større. Dette kan du gjøre med å dra på pilene eller skrive\ndet manuelt inn på høyresida. Vi setter Scale til <code>2</code> på <code>x</code>, <code>1</code> på <code>y</code> og\n<code>2</code> på <code>z</code>.</li>\n<li>Lag en spiller! Fra hierarkiet <strong>Create &gt; 3D Object &gt; Sphere</strong> og gi den\nnavnet <code>Player</code>. Tilbakestill posisjonen på samme måte som vi gjorde med planet.</li>\n<li>Flytt ballen opp <code>0.5</code> enhet slik at vi får den til å ligge på planet. Husk at\nballen er 1 høy og 1 bred. Husk at det er y-posisjonen vi endrer med <code>0.5</code>.</li>\n<li>La oss bytte farge på brettet. Vi lager en ny mappe i Assets-mappa vår og gir\nden navnet <code>Materials</code>. Velg denne mappa og lag et nytt material og kall den\n<code>Background</code>. Endre farge ved å trykke på den hvite boksen til høyre for\n<code>Albedo</code>-feltet og velg en fin blåfarge. Du kan bruke RGB-verdien <code>(0, 32, 64)</code>.</li>\n<li>Lag brettet blått ved å dra <code>Background</code>-materialet til brettet i Scenen.</li>\n<li>For å få bedre lys i spillet kan vi endre rotasjonen på lyset i\nhierarkiet vårt. Endre rotasjon på y-aksen til <code>60</code>.</li>\n</ul>\n</section>\n<section class=\"check\" id=\"bevege-spilleren\">\n<h2 class=\"check\" id=\"bevege-spilleren\"><a href=\"http://unity3d.com/learn/tutorials/projects/roll-a-ball/moving-the-player?playlist=17141\">Bevege spilleren</a></h2>\n<ul>\n<li>\n<p>Siden vi vil at ballen skal rulle rundt på brettet, kollidere i vegger og treffe\nforskjellige objekter for å samle poeng trenger vi litt fysikk. Dette får vi\nved å legge til en Rigidbody-komponent på <code>Player</code>-objektet. Trykk på <strong>Add\nComponent</strong> når du har valgt spilleren og velg <strong>Physics &gt; Rigidbody</strong>.</p>\n</li>\n<li>\n<p>Lag en ny mappe <code>Assets/Scripts</code> og et nytt C#-script som vi kaller\n<code>PlayerController</code>. Koden vi skal legge inn der er det best å skrive selv.</p>\n<figure>Siden noen av dere jobber hjemmefra legger vi inn hele kodesnutten under. Ikke\nkopier den, men skriv inn alle linjene!</figure>\n<figure><strong>PlayerController.cs</strong></figure>\n<pre><code class=\"language-csharp\"><span class=\"hljs-keyword\">using</span> UnityEngine;\n<span class=\"hljs-keyword\">using</span> System.Collections;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PlayerController</span> : <span class=\"hljs-title\">MonoBehaviour</span> {\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">float</span> speed = <span class=\"hljs-number\">10.0</span>f;\n\n    <span class=\"hljs-keyword\">private</span> Rigidbody rb;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span> (<span class=\"hljs-params\"></span>)\n    </span>{\n        rb = GetComponent&lt;Rigidbody&gt;();\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">FixedUpdate</span> (<span class=\"hljs-params\"></span>)\n    </span>{\n        <span class=\"hljs-keyword\">float</span> moveHorizontal = Input.GetAxis (<span class=\"hljs-string\">\"Horizontal\"</span>);\n        <span class=\"hljs-keyword\">float</span> moveVertical = Input.GetAxis (<span class=\"hljs-string\">\"Vertical\"</span>);\n\n        Vector3 movement = <span class=\"hljs-keyword\">new</span> Vector3 (moveHorizontal, <span class=\"hljs-number\">0.0</span>f, moveVertical);\n\n        rb.AddForce (movement * speed);\n    }\n}\n\n</code></pre>\n</li>\n<li>\n<figure>Siden vi vil at scriptet skal styre ballen må vi dra det inn på <code>Player</code>-objektet.</figure>\n</li>\n</ul>\n</section>\n<section class=\"flag\" id=\"test-spillet\">\n<h2 class=\"flag\" id=\"test-spillet\">Test spillet</h2>\n<figure><strong>Klikk på Play-knappen øverst i Unity-editoren.</strong></figure>\n<ul>\n<li>Trykk på piltastene, flytter ballen seg?</li>\n<li>Hva skjer hvis du prøver å styre med tastene WASD?</li>\n</ul>\n</section>\n</section>\n<section class=\"activity\" id=\"steg-2-kamera-og-spilleomrade\">\n<h1 class=\"activity\" id=\"steg-2-kamera-og-spilleomrade\">Steg 2: Kamera og spilleområde</h1>\n<section class=\"check\" id=\"flytte-kameraet\">\n<h2 class=\"check\" id=\"flytte-kameraet\"><a href=\"http://unity3d.com/learn/tutorials/projects/roll-a-ball/moving-the-camera?playlist=17141\"> Flytte kameraet</a></h2>\n<ul>\n<li>\n<figure>Flytt først kameraet opp 10 enheter (på y-aksen) og vipp det ned med 45\ngrader (x-aksen).</figure>\n</li>\n<li>\n<p>Flytt kameraet til et <em>barn</em> av <code>Player</code>-objektet, dette vil gjøre at kameraet\nfølger etter spilleren. Et <em>barn</em> er et programmeringsbegrep som betyr at noe\ner <em>under</em> noe annet, f.eks. en undermappe. Du gjør kameraet til et <em>barn</em> av\n<code>Player</code>-objektet ved å dra det og slippe det på <code>Player</code>-objektet i hierarkiet.\nSe at kameraet (nesten) flytter seg med spilleren.</p>\n</li>\n<li>\n<p>Test spillet og se hva som skjer.</p>\n</li>\n<li>\n<p>Siden ikke alt gikk etter planen må vi lage et script for å flytte kameraet.\nFlytt kameraet tilbake ut av <code>Player</code>-objektet slik at det ikke snurrer rundt\nlengre.</p>\n</li>\n<li>\n<figure>Lag et nytt C#-script som du kaller <code>CameraController</code> og legg til koden:</figure>\n<figure><strong>CameraController.cs</strong></figure>\n<pre><code class=\"language-csharp\"><span class=\"hljs-keyword\">using</span> UnityEngine;\n<span class=\"hljs-keyword\">using</span> System.Collections;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CameraController</span> : <span class=\"hljs-title\">MonoBehaviour</span> {\n\n    <span class=\"hljs-keyword\">public</span> GameObject player;\n\n    <span class=\"hljs-keyword\">private</span> Vector3 offset;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span> (<span class=\"hljs-params\"></span>)\n    </span>{\n        offset = transform.position - player.transform.position;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">LateUpdate</span> (<span class=\"hljs-params\"></span>)\n    </span>{\n        transform.position = player.transform.position + offset;\n    }\n}\n\n</code></pre>\n</li>\n<li>\n<p>Dra scriptet over til kameraet og med kameraet valgt dra <code>Player</code>-objektet til\nPlayer-referansen på høyresida.</p>\n</li>\n</ul>\n</section>\n<section class=\"flag\" id=\"test-spillet-2\">\n<h2 class=\"flag\" id=\"test-spillet-2\">Test spillet</h2>\n<figure><strong>Klikk på Play-knappen øverst i Unity-editoren.</strong></figure>\n<ul>\n<li>Flytt ballen og se at kameraet følger etter den.</li>\n</ul>\n</section>\n<section class=\"check\" id=\"sette-opp-spilleomradet\">\n<h2 class=\"check\" id=\"sette-opp-spilleomradet\"><a href=\"http://unity3d.com/learn/tutorials/projects/roll-a-ball/setting-up-the-play-area?playlist=17141\">Sette opp spilleområdet</a></h2>\n<ul>\n<li>La oss lage noen vegger! Lag et nytt tomt objekt som du kaller <code>Walls</code>.\n<strong>Create &gt; Create Empty</strong>. Dette blir en mappe for alle veggene. Tilbakestill\nposisjonen til Walls til <code>(0, 0, 0)</code>.</li>\n<li>Lag første vegg. <strong>Create &gt; 3D Object &gt; Cube</strong> og tilbakestill posisjonen til\ndenne. Sjekk at ballen havner oppi denne kuben. Legg denne som et barn av\nWalls og kall den <code>West Wall</code>.</li>\n<li>Lag veggen lang og tynn. Under Scale setter vi <code>0.5</code>, <code>2</code> og <code>20.5</code>.</li>\n<li>Flytt veggen til siden ved å sette <code>x</code> til <code>-10</code>.</li>\n<li>Dupliser veggen vi har og kall den <code>East Wall</code>. Endre x-posisjon til <code>10</code> og\nse at den kommer på plass.</li>\n<li>Dupliser <code>East Wall</code> og kall den <code>North Wall</code>. Tilbakestill posisjonen og sett\nscale til <code>20.5</code>, <code>2</code>, <code>0.5</code>. Sett posisjon på z-aksen til <code>10</code> for å se at\nden kommer på riktig plass.</li>\n<li>Dipliser <code>North Wall</code> og kall den <code>South Wall</code>. Sett posisjon på z-aksen til\n<code>-10</code>.</li>\n</ul>\n</section>\n<section class=\"flag\" id=\"test-spillet-3\">\n<h2 class=\"flag\" id=\"test-spillet-3\">Test spillet</h2>\n<figure><strong>Klikk på Play-knappen øverst i Unity-editoren.</strong></figure>\n<ul>\n<li>Prøv spillet og se at veggene er på plass.</li>\n</ul>\n</section>\n</section>\n<section class=\"activity\" id=\"steg-3-samle-objekter-og-poeng\">\n<h1 class=\"activity\" id=\"steg-3-samle-objekter-og-poeng\">Steg 3: Samle objekter og poeng</h1>\n<section class=\"check\" id=\"lag-objekter-vi-kan-samle-inn\">\n<h2 class=\"check\" id=\"lag-objekter-vi-kan-samle-inn\"><a href=\"http://unity3d.com/learn/tutorials/projects/roll-a-ball/creating-collectables?playlist=17141\">Lag objekter vi kan samle inn</a></h2>\n<ul>\n<li>\n<p>Lag en kube vi kan samle inn. <strong>Create &gt; 3D Object &gt; Cube</strong> og kall den\n<code>Pick Up</code>.  Tilbakestill posisjonen og se at ballen havner inni denne kuben.</p>\n</li>\n<li>\n<figure>Deaktiver <code>Player</code>-objektet.</figure>\n</li>\n<li>\n<figure>Flytt opp kuben med 0.5 enheter og sett scale til 0.5 i alle aksene. La oss\ntippe den litt over. Endre rotasjon til 45 på alle aksene.</figure>\n</li>\n<li>\n<p>La oss få kuben til å snurre litt for å tiltrekke oppmerksomhet.</p>\n</li>\n<li>\n<figure>Lag et nytt C#-script og kall det <code>Rotator</code>. Legg til koden:</figure>\n<figure><strong>Rotator.cs</strong></figure>\n<pre><code class=\"language-csharp\">\n<span class=\"hljs-keyword\">using</span> UnityEngine;\n<span class=\"hljs-keyword\">using</span> System.Collections;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Rotator</span> : <span class=\"hljs-title\">MonoBehaviour</span> {\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span> (<span class=\"hljs-params\"></span>)\n    </span>{\n        transform.Rotate (<span class=\"hljs-keyword\">new</span> Vector3 (<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">45</span>) * Time.deltaTime);\n    }\n}\n\n</code></pre>\n</li>\n<li>\n<p>Start spillet og se at kuben snurrer rundt. Husk å legge til scriptet i\n<code>Pick Up</code>-objektet.</p>\n</li>\n<li>\n<p>Siden vi trenger mange kuber må vi gjøre <code>Pick Up</code>-objektet om til en <em>Prefab</em>.\nEn Prefab er en slags skisse for hvordan et spillobjekt skal se ut og oppføre\nseg.</p>\n</li>\n<li>\n<p>Lag en ny mappe og kall den <code>Prefabs</code>. Dra <code>Pick Up</code>-objektet inn i denne mappa.</p>\n</li>\n<li>\n<p>Lag en nytt tomt objekt for å organisere objektene våre. Kall dette <code>Pick Ups</code>\nog legg <code>Pick Up</code> til her.</p>\n</li>\n<li>\n<p>Endre synsvinkel til rett over spillebrettet og lag 10 nye kuber ved å\nduplisere <code>Pick Up</code>-objektet vi har. Legg kubene rundt omkring på brettet.</p>\n</li>\n<li>\n<p>Start spillet og se at alle kubene snurrer.</p>\n</li>\n<li>\n<p>La oss endre fargen på kubene! Dupliser <code>Background</code>-materialet og kall det\n<code>Pick Up</code>. velg en fin gulfarge under Albedo og dra den ned på <code>Pick Up</code>-prefaben.</p>\n</li>\n</ul>\n</section>\n<section class=\"flag\" id=\"test-spillet-4\">\n<h2 class=\"flag\" id=\"test-spillet-4\">Test spillet</h2>\n<figure><strong>Klikk på Play-knappen øverst i Unity-editoren.</strong></figure>\n<ul>\n<li>Start spillet og se at alle kubene er gule og snurrer rundt!</li>\n</ul>\n</section>\n<section class=\"check\" id=\"samle-inn-objekter\">\n<h2 class=\"check\" id=\"samle-inn-objekter\"><a href=\"http://unity3d.com/learn/tutorials/projects/roll-a-ball/collecting-pick-up-objects?playlist=17141\">Samle inn objekter</a></h2>\n<ul>\n<li>\n<p>Vis spilleren igjen.</p>\n</li>\n<li>\n<p>Legg merke til at <code>Player</code>-objektet har en Sphere Collider-komponent. Denne skal vi bruke\ntil å sjekke kollisjon mot <code>Pick Up</code>-objektene.</p>\n</li>\n<li>\n<p>Åpne <code>PlayerController</code>-scriptet igjen og legg til funksjonen under i\nPlayerController-klassen:</p>\n<pre><code class=\"language-csharp\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnTriggerEnter</span>(<span class=\"hljs-params\">Collider other</span>)\n</span>{\n    <span class=\"hljs-keyword\">if</span> (other.gameObject.CompareTag (<span class=\"hljs-string\">\"Pick Up\"</span>))\n    {\n        other.gameObject.SetActive (<span class=\"hljs-keyword\">false</span>);\n    }\n}\n</code></pre>\n</li>\n<li>\n<p>Velg <code>Pick Up</code>-prefaben og legg til en ny <strong>Tag</strong> vi kaller <code>Pick Up</code>. Det er\nveldig viktig at den heter <code>Pick Up</code>. <strong>Husk store bokstaver på P og U!</strong></p>\n</li>\n<li>\n<p>Prøv spillet og se hva som skjer.</p>\n</li>\n<li>\n<p>For å hindre at Unity lager en kollisjon mellom ballen og kubene må vi krysse\nfor <strong>Is trigger?</strong> på <code>Box Collider</code>-komponenten til <code>Pick Up</code>-prefaben.\nDette gjør at Unity registrerer at de to objektene har kollidert, men den\nflytter ikke på noen av objektene.</p>\n</li>\n<li>\n<p>Test spillet og se at alt er som det skal!</p>\n</li>\n<li>\n<p>(BONUS) For å gjøre en liten optimisering kan vi legge til en Rigidbody-komponent\ntil kubene. Prøv å spille spillet nå. Se at alle kubene faller gjennom gulvet.\nDette er fordi vi har satt en <code>Trigger-collider</code> til kubene. Sett <strong>Is Kinematic</strong>\nfor å fikse dette. Les mer om dette på <a href=\"http://unity3d.com/learn/tutorials/projects/roll-a-ball/collecting-pick-up-objects?playlist=17141\">tutorialen</a>.</p>\n</li>\n</ul>\n</section>\n<section class=\"check\" id=\"vis-poengscore\">\n<h2 class=\"check\" id=\"vis-poengscore\"><a href=\"http://unity3d.com/learn/tutorials/projects/roll-a-ball/displaying-text?playlist=17141\">Vis poengscore</a> </h2>\n<ul>\n<li>\n<figure>Vi trenger noen variabler for å holde styr på hvor mange objekter vi har\nsamlet inn.</figure>\n</li>\n<li>\n<figure>Åpne <code>PlayerController</code> og endre det til å være som følger:</figure>\n<figure><strong>PlayerController.cs</strong></figure>\n<pre><code class=\"language-csharp\"><span class=\"hljs-keyword\">using</span> UnityEngine;\n<span class=\"hljs-keyword\">using</span> System.Collections;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PlayerController</span> : <span class=\"hljs-title\">MonoBehaviour</span> {\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">float</span> speed;\n\n    <span class=\"hljs-keyword\">private</span> Rigidbody rb;\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">int</span> count;                                   <span class=\"hljs-comment\">// Ny linje</span>\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span> (<span class=\"hljs-params\"></span>)\n    </span>{\n        rb = GetComponent&lt;Rigidbody&gt;();\n        count = <span class=\"hljs-number\">0</span>;                                      <span class=\"hljs-comment\">// Ny linje</span>\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">FixedUpdate</span> (<span class=\"hljs-params\"></span>)\n    </span>{\n        <span class=\"hljs-keyword\">float</span> moveHorizontal = Input.GetAxis (<span class=\"hljs-string\">\"Horizontal\"</span>);\n        <span class=\"hljs-keyword\">float</span> moveVertical = Input.GetAxis (<span class=\"hljs-string\">\"Vertical\"</span>);\n\n        Vector3 movement = <span class=\"hljs-keyword\">new</span> Vector3 (moveHorizontal, <span class=\"hljs-number\">0.0</span>f, moveVertical);\n\n        rb.AddForce (movement * speed);\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnTriggerEnter</span>(<span class=\"hljs-params\">Collider other</span>)\n    </span>{\n        <span class=\"hljs-keyword\">if</span> (other.gameObject.CompareTag(<span class=\"hljs-string\">\"Pick Up\"</span>))\n        {\n            other.gameObject.SetActive (<span class=\"hljs-keyword\">false</span>);\n            count = count + <span class=\"hljs-number\">1</span>;                          <span class=\"hljs-comment\">// Ny linje</span>\n        }\n    }\n\n}\n</code></pre>\n</li>\n<li>\n<figure>Sjekk at <code>count</code> endres når vi treffer kubene.</figure>\n</li>\n<li>\n<p>Vi trenger noe på skjermen som viser poengene våre. Under hierarkiet, lag et\nnytt <code>Text</code>-objekt (<strong>Create &gt; UI &gt; Text</strong>). Gi objektet navnet <code>CountText</code>.</p>\n</li>\n<li>\n<p>Endre farge på teksten til hvit og endre posisjon til <code>(0, 0, 0)</code>. Størrelsen til\nCountText skal være 160 bred og 30 høy. Endre teksten som står der til <code>Count Text</code>.</p>\n</li>\n<li>\n<p>Flytt teksten øverst til venstre. Trykk på firkanten inne i Rect Transform og\nvelg <strong>top left</strong> mens du holder inne <strong>shift</strong> og <strong>alt</strong>.</p>\n</li>\n<li>\n<p>Endre Pos X og Pos Y til <code>10</code> og <code>-10</code>.</p>\n</li>\n<li>\n<p>Nå vil vi endre denne teksten med <code>PlayerController</code>-scriptet. Åpne det opp og\nendre det til:</p>\n<figure><strong>PlayerController.cs</strong></figure>\n<pre><code class=\"language-csharp\"><span class=\"hljs-keyword\">using</span> UnityEngine;\n<span class=\"hljs-keyword\">using</span> UnityEngine.UI;                                   <span class=\"hljs-comment\">// Ny linje</span>\n<span class=\"hljs-keyword\">using</span> System.Collections;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PlayerController</span> : <span class=\"hljs-title\">MonoBehaviour</span> {\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">float</span> speed;\n    <span class=\"hljs-keyword\">public</span> Text countText;                              <span class=\"hljs-comment\">// Ny linje</span>\n\n    <span class=\"hljs-keyword\">private</span> Rigidbody rb;\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">int</span> count;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span> (<span class=\"hljs-params\"></span>)\n    </span>{\n        rb = GetComponent&lt;Rigidbody&gt;();\n        count = <span class=\"hljs-number\">0</span>;\n        SetCountText ();                                <span class=\"hljs-comment\">// Ny linje</span>\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">FixedUpdate</span> (<span class=\"hljs-params\"></span>)\n    </span>{\n        <span class=\"hljs-keyword\">float</span> moveHorizontal = Input.GetAxis (<span class=\"hljs-string\">\"Horizontal\"</span>);\n        <span class=\"hljs-keyword\">float</span> moveVertical = Input.GetAxis (<span class=\"hljs-string\">\"Vertical\"</span>);\n\n        Vector3 movement = <span class=\"hljs-keyword\">new</span> Vector3 (moveHorizontal, <span class=\"hljs-number\">0.0</span>f, moveVertical);\n\n        rb.AddForce (movement * speed);\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnTriggerEnter</span>(<span class=\"hljs-params\">Collider other</span>)\n    </span>{\n        <span class=\"hljs-keyword\">if</span> (other.gameObject.CompareTag(<span class=\"hljs-string\">\"Pick Up\"</span>))\n        {\n            other.gameObject.SetActive (<span class=\"hljs-keyword\">false</span>);\n            count = count + <span class=\"hljs-number\">1</span>;\n            SetCountText ();                            <span class=\"hljs-comment\">// Ny linje</span>\n        }\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">SetCountText</span> (<span class=\"hljs-params\"></span>)                                <span class=\"hljs-comment\">// Ny linje</span>\n    </span>{                                                   <span class=\"hljs-comment\">// Ny linje</span>\n        countText.text = <span class=\"hljs-string\">\"Count: \"</span> + count.ToString (); <span class=\"hljs-comment\">// Ny linje</span>\n    }                                                   <span class=\"hljs-comment\">// Ny linje</span>\n}\n</code></pre>\n</li>\n<li>\n<figure>Dra CountText inn i Count Text-referansen til <code>Player</code>-objektet.</figure>\n</li>\n<li>\n<p>Lagre og test spillet!</p>\n</li>\n<li>\n<p>Lag et nytt UI Text-ojekt og kall det Win Text. Lag teksten hvit, sett\nskriftstørrelse til 24 og sett den sentrert i midten. Sett teksten til å være\n<code>Win Text</code> og flytt den litt opp. Pos X skal være 0 og pos Y skal være 10.</p>\n</li>\n<li>\n<figure>Lagre og gå tilbake til <code>PlayerController</code>-scriptet.</figure>\n</li>\n<li>\n<p>Lag en ny variabel <code>winText</code>, initialiser den i <code>Start</code> og endre den i <code>SetCountText</code>.\nNår du har kodet ferdig skal det se slik ut:</p>\n<figure><strong>PlayerController.cs</strong></figure>\n<pre><code class=\"language-csharp\"><span class=\"hljs-keyword\">using</span> UnityEngine;\n<span class=\"hljs-keyword\">using</span> UnityEngine.UI;\n<span class=\"hljs-keyword\">using</span> System.Collections;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PlayerController</span> : <span class=\"hljs-title\">MonoBehaviour</span> {\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">float</span> speed;\n    <span class=\"hljs-keyword\">public</span> Text countText;\n    <span class=\"hljs-keyword\">public</span> Text winText;                                <span class=\"hljs-comment\">// Ny linje</span>\n\n    <span class=\"hljs-keyword\">private</span> Rigidbody rb;\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">int</span> count;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span> (<span class=\"hljs-params\"></span>)\n    </span>{\n        rb = GetComponent&lt;Rigidbody&gt;();\n        count = <span class=\"hljs-number\">0</span>;\n        SetCountText ();\n        winText.text = <span class=\"hljs-string\">\"\"</span>;                              <span class=\"hljs-comment\">// Ny linje</span>\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">FixedUpdate</span> (<span class=\"hljs-params\"></span>)\n    </span>{\n        <span class=\"hljs-keyword\">float</span> moveHorizontal = Input.GetAxis (<span class=\"hljs-string\">\"Horizontal\"</span>);\n        <span class=\"hljs-keyword\">float</span> moveVertical = Input.GetAxis (<span class=\"hljs-string\">\"Vertical\"</span>);\n\n        Vector3 movement = <span class=\"hljs-keyword\">new</span> Vector3 (moveHorizontal, <span class=\"hljs-number\">0.0</span>f, moveVertical);\n\n        rb.AddForce (movement * speed);\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnTriggerEnter</span>(<span class=\"hljs-params\">Collider other</span>)\n    </span>{\n        <span class=\"hljs-keyword\">if</span> (other.gameObject.CompareTag(<span class=\"hljs-string\">\"Pick Up\"</span>))\n        {\n            other.gameObject.SetActive (<span class=\"hljs-keyword\">false</span>);\n            count = count + <span class=\"hljs-number\">1</span>;\n            SetCountText ();\n        }\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">SetCountText</span> (<span class=\"hljs-params\"></span>)\n    </span>{\n        countText.text = <span class=\"hljs-string\">\"Count: \"</span> + count.ToString ();\n        <span class=\"hljs-keyword\">if</span> (count &gt;= <span class=\"hljs-number\">12</span>)                                <span class=\"hljs-comment\">// Ny linje</span>\n        {                                               <span class=\"hljs-comment\">// Ny linje</span>\n            winText.text = <span class=\"hljs-string\">\"You Win!\"</span>;                  <span class=\"hljs-comment\">// Ny linje</span>\n        }                                               <span class=\"hljs-comment\">// Ny linje</span>\n    }\n}\n</code></pre>\n</li>\n</ul>\n</section>\n<section class=\"flag\" id=\"test-spillet-5\">\n<h2 class=\"flag\" id=\"test-spillet-5\">Test spillet</h2>\n<figure><strong>Klikk på Play-knappen øverst i Unity-editoren.</strong></figure>\n<ul>\n<li>Prøv spillet og se hvor fort du klarer å samle inn alle kubene!</li>\n</ul>\n</section>\n<section class=\"challenge\" id=\"utfordring-1-bygg-spillet-slik-at-du-kan-dele-det-med-vennene-dine\">\n<h2 class=\"challenge\" id=\"utfordring-1-bygg-spillet-slik-at-du-kan-dele-det-med-vennene-dine\">Utfordring 1: Bygg spillet slik at du kan dele det med vennene dine</h2>\n<p>Akkurat nå er det jo kun du som kan spille spillet ditt. I <a href=\"http://unity3d.com/learn/tutorials/projects/roll-a-ball/building?playlist=17141\">denne videoen</a>\nvises det hvordan man kan bygge spillet til forskjellige platformer, for eksempel\nWindows eller Mac. Se om du klarer å bygge det slik at du kan dele det med\nvennene dine!</p>\n</section>\n</section>\n";

/***/ },

/***/ 1501:
/*!***********************************************************!*\
  !*** ../oppgaver/src/unity/rull-en-ball/rull-en-ball.png ***!
  \***********************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "_/oppgaver/src/unity/rull-en-ball/rull-en-ball.4fb5b7.png";

/***/ }

});
//# sourceMappingURL=rull-en-ball.e4815196c5aa0ddabc72.js.map